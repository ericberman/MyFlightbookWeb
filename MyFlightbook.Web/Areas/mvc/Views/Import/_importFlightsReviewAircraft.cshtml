@using System.Globalization
@using MyFlightbook.ImportFlights
@{
    CSVImporter importer = ViewBag.importer;
    ExternalFormatConvertResults results = ViewBag.results;
}
<script type="text/javascript">
</script>
@if (importer.FlightsToImport.Count > 0 && importer.HasErrors && importer.MissingAircraft.Any())
{
    <p>@Resources.LogbookEntry.ImportWizardMissingAircraft</p>
    Html.RenderAction("AircraftReview", "Import", new { rgCandidates = importer.MissingAircraft });
}
else
{
    <p>@Resources.LogbookEntry.ImportWizardAllAircraftFound</p>
}
@if (!String.IsNullOrEmpty(results.ConvertedName) || !string.IsNullOrEmpty(results.AuditResult))
{
    <div style="font-size: smaller; margin-top: 12pt;" id="pnlAudit">
        @{ Html.RenderAction("RenderExpandoText", "MFBTemplate", new { fExpanded = results.IsBroken, targetID = "pnlConverted", labelText = Resources.LogbookEntry.importAuditHeader }); }
        <div id="pnlConverted" style="@(results.IsBroken ? string.Empty : "display: none; ")">
            @if (!String.IsNullOrEmpty(results.ConvertedName))
            {
                <p>
                    @(!String.IsNullOrEmpty(results.ConvertedName) ? String.Format(CultureInfo.CurrentCulture, Resources.LogbookEntry.importLabelFileWasConverted, results.ConvertedName) : string.Empty)
                    <a href="@Url.Action("DownloadConverted", "Import")">@Resources.LogbookEntry.importLabelDownloadConverted</a>
                </p>
            }
            <div style="white-space:pre" class="@(results.IsBroken ? "error" : string.Empty)">@results.AuditResult</div>
        </div>
    </div>
}
<input type="hidden" name="isPendingOnly" id="hdnPendingOnly" value="@Json.Encode(results.IsPendingOnly)" />