<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DisplayTemplateWithType" xml:space="preserve">
    <value>{0} (Type: {1})</value>
    <comment>E.g., "B737 (Type: B737-300)"</comment>
  </data>
  <data name="editMakeHeader" xml:space="preserve">
    <value>Edit Make: {0}</value>
  </data>
  <data name="errMDSTooLong" xml:space="preserve">
    <value>Mission/Design/Series '{0}' is too long; please provide one that is fewer than 40 characters in length</value>
  </data>
  <data name="errSaveMakeFailed" xml:space="preserve">
    <value>Error saving make/model: {0}</value>
  </data>
  <data name="errSaveManufacturerFailed" xml:space="preserve">
    <value>Error saving manufacturer - {0}\r\n{1}</value>
  </data>
  <data name="HasFlaps" xml:space="preserve">
    <value>Flaps</value>
  </data>
  <data name="IsComplex" xml:space="preserve">
    <value>Complex</value>
  </data>
  <data name="IsConstantProp" xml:space="preserve">
    <value>Controllable Pitch Prop</value>
  </data>
  <data name="IsHighPerf" xml:space="preserve">
    <value>High Performance</value>
  </data>
  <data name="IsRetract" xml:space="preserve">
    <value>Retractable Gear</value>
  </data>
  <data name="IsTailwheel" xml:space="preserve">
    <value>Tailwheel</value>
  </data>
  <data name="IsTurbine" xml:space="preserve">
    <value>Turbine</value>
  </data>
  <data name="makeStatsHeader" xml:space="preserve">
    <value>View your totals in {0}</value>
    <comment>e.g., "Your time in PA-180"</comment>
  </data>
  <data name="makeStatsTotals" xml:space="preserve">
    <value>Totals:</value>
  </data>
  <data name="newMakeHeader" xml:space="preserve">
    <value>Create new make/model</value>
  </data>
  <data name="SampleAircraftTooltip" xml:space="preserve">
    <value>Sample Aircraft</value>
  </data>
  <data name="IsJet" xml:space="preserve">
    <value>Jet</value>
  </data>
  <data name="IsTMG" xml:space="preserve">
    <value>Motor Glider/TMG</value>
  </data>
  <data name="IsTurboprop" xml:space="preserve">
    <value>Turboprop</value>
  </data>
  <data name="IsLegacyHighPerf" xml:space="preserve">
    <value>High Performance Until Aug 1997</value>
  </data>
  <data name="AllMakesTitle" xml:space="preserve">
    <value>{0} - All Models made by {1}</value>
    <comment>{0} is the brand</comment>
  </data>
  <data name="IsMultiHelicopter" xml:space="preserve">
    <value>Multi-engine Helicopter</value>
  </data>
  <data name="IsElectric" xml:space="preserve">
    <value>Electric</value>
  </data>
  <data name="IsGlass" xml:space="preserve">
    <value>Glass Cockpit</value>
  </data>
  <data name="errSinglePilotButNotTypeRated" xml:space="preserve">
    <value>Model is certified for single-pilot operations, but it isn't turbine or doesn't require a type rating</value>
  </data>
  <data name="IsCertifiedSinglePilot" xml:space="preserve">
    <value>Certified for Single Pilot Operations</value>
  </data>
  <data name="searchWildcardTip" xml:space="preserve">
    <value>Tip: you can use wildcards * to match 0 or more characters, or ? to match a single character.</value>
  </data>
  <data name="searchICAOTip" xml:space="preserve">
    <value>Tip: search for "ICAO:abc" to restrict a search for "abc" to the ICAO designator for the model</value>
  </data>
  <data name="searchModels" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="searchTip" xml:space="preserve">
    <value>Search for models</value>
  </data>
  <data name="ICAOTemplate" xml:space="preserve">
    <value> (ICAO: {0})</value>
  </data>
  <data name="AllTAA" xml:space="preserve">
    <value>All aircraft of this model are TAAs</value>
  </data>
  <data name="IsTAA" xml:space="preserve">
    <value>Technically Advanced Airplane (TAA)</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="TAADefinition" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>content.en\taadefinition.htm;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="avionicsAny" xml:space="preserve">
    <value>Available in non-glass configurations</value>
  </data>
  <data name="avionicsGlass" xml:space="preserve">
    <value>Glass PFD</value>
  </data>
  <data name="avionicsLabel" xml:space="preserve">
    <value>Minimum available avionics</value>
  </data>
  <data name="avionicsTAA" xml:space="preserve">
    <value>Glass PFD, MFD, and integrated Autopilot (TAA)</value>
  </data>
  <data name="MakeStatsAircraftCount" xml:space="preserve">
    <value>You have {0} aircraft of this model</value>
  </data>
  <data name="MakeStatsFlightsCount" xml:space="preserve">
    <value>You have {0} flight(s) in this model {1}</value>
    <comment>{1} is MakeStatsFlightsDateRange</comment>
  </data>
  <data name="MakeStatsFlightsDateRange" xml:space="preserve">
    <value>between {0:d} and {1:d}</value>
  </data>
  <data name="editModelPrompt" xml:space="preserve">
    <value>Edit this model</value>
  </data>
  <data name="searchTipQuick" xml:space="preserve">
    <value>Type a model to quickly find it</value>
  </data>
  <data name="editMakeTypeRatingPrompt" xml:space="preserve">
    <value>If a type rating is required to fly this, please add it here</value>
  </data>
  <data name="errYesNotValidType" xml:space="preserve">
    <value>This is not a yes/no field.  If a type rating is required to fly aircraft of this model, please enter it here.  You can use the provided link to find FAA-specified type designators, or look up other similar models to find the correct type rating requirement to use.</value>
  </data>
  <data name="promptLookUpTypes" xml:space="preserve">
    <value>Look up type ratings</value>
  </data>
  <data name="AllAircraftForModel" xml:space="preserve">
    <value>All aircraft on {0} that are {1}</value>
    <comment>{0} is the brand, {1} is the model</comment>
  </data>
  <data name="AllManufacturersTitle" xml:space="preserve">
    <value>All Manufacturers on {0}</value>
    <comment>{0} is the brand</comment>
  </data>
  <data name="editMakeAddMake" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="editMakeAddmanufacturer" xml:space="preserve">
    <value>Add a new manufacturer</value>
  </data>
  <data name="editMakeAddManufacturerPrompt" xml:space="preserve">
    <value>Add a new manufacturer</value>
  </data>
  <data name="editMakeCategoryClass" xml:space="preserve">
    <value>Category/Class:</value>
  </data>
  <data name="editMakeCertifiedSingle" xml:space="preserve">
    <value>This model is certified for single-pilot operations</value>
  </data>
  <data name="editMakeComplex" xml:space="preserve">
    <value>Complex</value>
  </data>
  <data name="editMakeCSP" xml:space="preserve">
    <value>Controllable Pitch Prop</value>
  </data>
  <data name="editMakeEngineType" xml:space="preserve">
    <value>Engine Type:</value>
  </data>
  <data name="editMakeEngineTypeElectric" xml:space="preserve">
    <value>Electric</value>
  </data>
  <data name="editMakeEngineTypeJet" xml:space="preserve">
    <value>Jet</value>
  </data>
  <data name="editMakeEngineTypePiston" xml:space="preserve">
    <value>Piston</value>
  </data>
  <data name="editMakeEngineTypeTurbine" xml:space="preserve">
    <value>Turbine (Other)</value>
  </data>
  <data name="editMakeEngineTypeTurboProp" xml:space="preserve">
    <value>Turboprop</value>
  </data>
  <data name="editMakeFeatures" xml:space="preserve">
    <value>Features:</value>
  </data>
  <data name="editMakeFlaps" xml:space="preserve">
    <value>Flaps</value>
  </data>
  <data name="editMakeHighPerf" xml:space="preserve">
    <value>High-Performance</value>
  </data>
  <data name="editMakeHighPerf1997" xml:space="preserve">
    <value>...but only until 1997</value>
  </data>
  <data name="editMakeHighPerf1997Note" xml:space="preserve">
    <value>On Aug 4, 1997, the FAA definition of high-performance changed from an aircraft with more than 200hp to being an aircraft with an engine of more than 200hp. &lt;br /&gt;&lt;br /&gt;So a multi-engine aircraft such as a Piper Seneca, with two engines of 200hp each (for 400hp total), went from being high-performance to not high performance as of that date.&lt;br /&gt;&lt;br /&gt;Checking this option will cause flights prior to that date in this model to be treated as high-performance, but not flights after that date.</value>
  </data>
  <data name="editMakeICAOCode" xml:space="preserve">
    <value>FAA/ICAO ID:</value>
  </data>
  <data name="editMakeICAOCodeLookup" xml:space="preserve">
    <value>Look up</value>
  </data>
  <data name="editMakeICAOCodeNote" xml:space="preserve">
    <value>The FAA or ICAO designator or the base model.</value>
  </data>
  <data name="editMakeICAOCodeNote2" xml:space="preserve">
    <value>E.g., a C-172 N and a C-172 S are both "C172"</value>
  </data>
  <data name="editMakeManufacturerPrompt" xml:space="preserve">
    <value>Manufacturer:</value>
  </data>
  <data name="editMakeMarketingName" xml:space="preserve">
    <value>Marketing Name:</value>
  </data>
  <data name="editMakeMarketingName1" xml:space="preserve">
    <value>An informal or market name for an aircraft.</value>
  </data>
  <data name="editMakeMarketingName2" xml:space="preserve">
    <value>E.g., &amp;quot;Skyhawk&amp;quot; for a C-172, but blank for a Boeing 737</value>
  </data>
  <data name="editMakeMDS" xml:space="preserve">
    <value>Mission / Design / Series:</value>
  </data>
  <data name="editMakeMDSNote1" xml:space="preserve">
    <value>All aircraft with a common MDS will contribute to AR 95-1 currency for that group</value>
  </data>
  <data name="editMakeMDSNote2" xml:space="preserve">
    <value>If you type an MDS identifier here, all aircraft with that MDS will contribute to AR 95-1 for that identifier.</value>
  </data>
  <data name="editMakeModelID" xml:space="preserve">
    <value>Model ID:</value>
  </data>
  <data name="editMakeModelNote" xml:space="preserve">
    <value>The model identifier.  Be as specific as possible.</value>
  </data>
  <data name="editMakeModelNote2" xml:space="preserve">
    <value>E.g., "B737-700" or "C-172 S" (rather than "B737" or "C-172")</value>
  </data>
  <data name="editMakeMultiHeli" xml:space="preserve">
    <value>Multi-engine</value>
  </data>
  <data name="editMakePossibleMatch" xml:space="preserve">
    <value>Possible match!</value>
  </data>
  <data name="editMakePossibleMatchNoneMatch" xml:space="preserve">
    <value>None of these match - Create it!</value>
  </data>
  <data name="editMakePossibleMatchPrompt" xml:space="preserve">
    <value>The make/model you are creating looks like it could be one of the following.  Please re-use one of these if it is a match (you may need to scroll):</value>
  </data>
  <data name="editMakePossibleMatchUseThis" xml:space="preserve">
    <value>Use this</value>
  </data>
  <data name="editMakeRetract" xml:space="preserve">
    <value>Retractable Landing Gear</value>
  </data>
  <data name="editMakeSelectMake" xml:space="preserve">
    <value>(Please select)</value>
  </data>
  <data name="editMakeSimAny" xml:space="preserve">
    <value>No Restrictions</value>
  </data>
  <data name="editMakeSimOnly" xml:space="preserve">
    <value>ADMIN Sim/Anon Restrictions</value>
  </data>
  <data name="editMakeSimSimOnly" xml:space="preserve">
    <value>All Aircraft of this make MUST NOT be real aircraft (i.e., sim only)</value>
  </data>
  <data name="editMakeSimSimOrGeneric" xml:space="preserve">
    <value>Can be sim or anonymous, but not real.</value>
  </data>
  <data name="editMakeTailwheel" xml:space="preserve">
    <value>Tailwheel</value>
  </data>
  <data name="editMakeTMG" xml:space="preserve">
    <value>Motor Glider/Touring Motor Glider (TMG)</value>
  </data>
  <data name="editMakeTypeDesc1" xml:space="preserve">
    <value>Leave this blank unless the aircraft requires a type-rating (typically jet or over 12,500lbs).</value>
  </data>
  <data name="editMakeTypeDesc2" xml:space="preserve">
    <value>E.g., &amp;quot;B-737&amp;quot; for a Boeing 737, blank for a C-172.</value>
  </data>
  <data name="editMakeTypeDesc3" xml:space="preserve">
    <value>Models that share a common type rating should use a common value here.</value>
  </data>
  <data name="editMakeValModelNameRequired" xml:space="preserve">
    <value>Please enter a model name</value>
  </data>
  <data name="addManufacturerTip" xml:space="preserve">
    <value>Tip: please do NOT make up manufacturer names.  You can use the built-in manufacturer "Generic" if you need to capture time across multiple or unknown models.</value>
  </data>
  <data name="makesAddModel" xml:space="preserve">
    <value>Create a new model</value>
  </data>
  <data name="makesAdvancedSearch" xml:space="preserve">
    <value>Advanced Search</value>
  </data>
  <data name="makesAdvCatClass" xml:space="preserve">
    <value>Category/Class</value>
  </data>
  <data name="makesAdvManufacturer" xml:space="preserve">
    <value>Manufacturer</value>
  </data>
  <data name="makesAdvModel" xml:space="preserve">
    <value>Model ID</value>
  </data>
  <data name="makesAdvModelName" xml:space="preserve">
    <value>Model Name</value>
  </data>
  <data name="makesAdvModelNameSample" xml:space="preserve">
    <value>(e.g., "Skyhawk")</value>
  </data>
  <data name="makesAdvModelSample" xml:space="preserve">
    <value>(e.g., "C-172")</value>
  </data>
  <data name="makesAdvModelType" xml:space="preserve">
    <value>Type designator</value>
  </data>
  <data name="makesHeader" xml:space="preserve">
    <value>Aircraft Models</value>
  </data>
  <data name="makesSearchMakes" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="makesSimpleSearch" xml:space="preserve">
    <value>Simple Search</value>
  </data>
  <data name="makesSortCatClass" xml:space="preserve">
    <value>Category/Class</value>
  </data>
  <data name="makesSortManufacturer" xml:space="preserve">
    <value>Manufacturer</value>
  </data>
  <data name="makesSortModel" xml:space="preserve">
    <value>Model</value>
  </data>
  <data name="makesTitle" xml:space="preserve">
    <value>Aircraft Makes and Models</value>
  </data>
  <data name="makesNoResults" xml:space="preserve">
    <value>No matching models found</value>
  </data>
  <data name="makesPrompt" xml:space="preserve">
    <value>There are currently {0:#,##0} models in the system; use the search functionality to browse them.</value>
  </data>
  <data name="errManufacturerNameRequired" xml:space="preserve">
    <value>Please provide a name for the manufacturer</value>
  </data>
  <data name="errManufacturerRequired" xml:space="preserve">
    <value>Please select a manufacturer from the list.  You can add one if needed.</value>
  </data>
  <data name="errInvalidICAO" xml:space="preserve">
    <value>ICAO/FAA codes may only be up to 4 alphanumeric characters</value>
  </data>
  <data name="editMakeKeepSimsHighLevel" xml:space="preserve">
    <value>&lt;div&gt;
&lt;p&gt;When creating a new model of simulator, please first check that an appropriate model doesn't already exist (it likely does).&lt;/p&gt;
&lt;p&gt;If not, then it's OK to create a new model, but please respect the following conventions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you are emulating a specific model of aircraft, you generally don't need to create a new model at all.  E.g., if you are emulating an Airbus A-320, just add an Airbus A-320 to your account and indicate that it is an ATD, FTD, or Full Flight Sim (FFS).  If you do want it under the simulator maker's name, then use the simulator maker (e.g., "Redbird") as the manufacturer and put the name of the model being emulated into the Model ID field, with "(SIM)" as the suffix.  E.g., "C-172 (SIM)". Fill in the remaining details as you would for the real aircraft.&lt;br /&gt;&amp;nbsp;&lt;/li&gt;
&lt;li&gt;If you are not emulating a specific model of aircraft, describe it in the model name (e.g., "ASEL (Glass, Complex)").&lt;br /&gt;&amp;nbsp;&lt;/li&gt;
&lt;li&gt;It's OK to create a sim that is a branded simulator model, if it's not already in the system.  E.g., Redbird makes an "FMX" model.&lt;br /&gt;&amp;nbsp;&lt;/li&gt;
&lt;li&gt;If you have a specific device identifier, then &lt;strong&gt;please stop&lt;/strong&gt;. and  re-use an existing model and put the device identifier into the "Simulator/Training Device Identifier" field for individual entries in your logbook that use that sim.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</value>
  </data>
  <data name="editMakeSimsWarningTitle" xml:space="preserve">
    <value>Creating a new simulator model on %APP_NAME%</value>
  </data>
  <data name="editMakeTailwheelAmphib" xml:space="preserve">
    <value> (for amphibs, when on land)</value>
  </data>
</root>