//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option or rebuild the Visual Studio project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Web.Application.StronglyTypedResourceProxyBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class MilestoneProgress {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MilestoneProgress() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Resources.MilestoneProgress", global::System.Reflection.Assembly.Load("App_GlobalResources"));
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *5* hours performing the *duties of PIC* with an instructor..
        /// </summary>
        internal static string AirshipDPIC {
            get {
                return ResourceManager.GetString("AirshipDPIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *25* hours of flight *training* in an *airship*.
        /// </summary>
        internal static string AirshipMinTraining {
            get {
                return ResourceManager.GetString("AirshipMinTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 *night cross-country* flight of at least *25NM* distance in *an airship*.
        /// </summary>
        internal static string AirshipXCNightFlight {
            get {
                return ResourceManager.GetString("AirshipXCNightFlight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3* hours of *cross-country training* in an *airship*.
        /// </summary>
        internal static string AirshipXCTraining {
            get {
                return ResourceManager.GetString("AirshipXCTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A maximum of 25 hours of time in a &quot;full flight simulator&quot; may contribute to this, if done per parts 121, 135, 141, or 142.  %APP_NAME% assumes that any time logged in a simulator for which landings are approved meets this requirement..
        /// </summary>
        internal static string ATPAirplaneClassSimulatorNote {
            get {
                return ResourceManager.GetString("ATPAirplaneClassSimulatorNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Per [61.159(b)](https://www.law.cornell.edu/cfr/text/14/61.159), if you&apos;ve done at least 20 night takeoffs and night full-stop landings, then each such takeoff+landing after that can substitute for an hour of required night flight, up to 25 hours..
        /// </summary>
        internal static string ATPAirplaneNightLandingsNote {
            get {
                return ResourceManager.GetString("ATPAirplaneNightLandingsNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A maximum of 25 hours of simulator/FTD time may contribute to this.  An additional 25 hours in a simulator or training device may also be applicable here if it was done at a certified Part 142 training center.
        /// </summary>
        internal static string ATPAirplaneSimulatorNote {
            get {
                return ResourceManager.GetString("ATPAirplaneSimulatorNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *50* hours of *instrument* flight in *helicopters*.
        /// </summary>
        internal static string ATPHelicopterInstrumentTime {
            get {
                return ResourceManager.GetString("ATPHelicopterInstrumentTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *25* hours of *instrument* flight as *PIC* in *helicopters*.
        /// </summary>
        internal static string ATPHelicopterPICInstrumentTime {
            get {
                return ResourceManager.GetString("ATPHelicopterPICInstrumentTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *75* hours of *instrument* time.
        /// </summary>
        internal static string ATPInstrumentTime {
            get {
                return ResourceManager.GetString("ATPInstrumentTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *75* hours as *PIC* in *helicopters*.
        /// </summary>
        internal static string ATPMinHeliPICTime {
            get {
                return ResourceManager.GetString("ATPMinHeliPICTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *200* hours of flight in *helicopters*.
        /// </summary>
        internal static string ATPMinHeliTime {
            get {
                return ResourceManager.GetString("ATPMinHeliTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *100* hours of *night* *flight time*.
        /// </summary>
        internal static string ATPMinNightTime {
            get {
                return ResourceManager.GetString("ATPMinNightTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *250* hours as *PIC* in a *powered-lift*.
        /// </summary>
        internal static string ATPMinPLPIC {
            get {
                return ResourceManager.GetString("ATPMinPLPIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *25* hours of *PIC night* flight in a *powered-lift*.
        /// </summary>
        internal static string ATPMinPLPICNight {
            get {
                return ResourceManager.GetString("ATPMinPLPICNight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *100* hours of *PIC cross-country* time in a *powered-lift*.
        /// </summary>
        internal static string ATPMinPLPICXC {
            get {
                return ResourceManager.GetString("ATPMinPLPICXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of total time.
        /// </summary>
        internal static string ATPMinTime {
            get {
                return ResourceManager.GetString("ATPMinTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *500* hours of *cross-country* flight time.
        /// </summary>
        internal static string ATPMinXCTime {
            get {
                return ResourceManager.GetString("ATPMinXCTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Per FAR [61.160(e) and (f)](https://www.law.cornell.edu/cfr/text/14/61.160), the cross-country limit here is 200 hours if you have 1500 total hours or are applying under 61.160(a)-(d).
        /// </summary>
        internal static string ATPMinXCTimeNoteRestricted {
            get {
                return ResourceManager.GetString("ATPMinXCTimeNoteRestricted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *200* hours of *cross-country* flight time.
        /// </summary>
        internal static string ATPMinXCTimeRestricted {
            get {
                return ResourceManager.GetString("ATPMinXCTimeRestricted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *15* hours of *night* flight time in *helicopters*.
        /// </summary>
        internal static string ATPNightHelicopterTime {
            get {
                return ResourceManager.GetString("ATPNightHelicopterTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *25* hours of *night PIC* flight time in *airplanes*.
        /// </summary>
        internal static string ATPNightPICTime {
            get {
                return ResourceManager.GetString("ATPNightPICTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *250* hours of *PIC* time in *airplanes*.
        /// </summary>
        internal static string ATPPICTime {
            get {
                return ResourceManager.GetString("ATPPICTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SIC time while performing the duties of PIC under the supervision of a PIC is allowed by the regulations but is not included here.  Also, per 61.159(a)(5)(ii), horizontal flight time in a powered lift may also be credited subject to 61.73; %APP_NAME% includes this if found, but may *overstate* your experience because it does not distinguish horizontal flight time nor does it know if you comply with 61.73..
        /// </summary>
        internal static string ATPPICTimeNote {
            get {
                return ResourceManager.GetString("ATPPICTimeNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [61.160](https://www.law.cornell.edu/cfr/text/14/61.160) describes a variety of conditions regarding your education and ratings that you must have met which %APP_NAME% cannot verify.  It is your responsibility to ensure that you have met these requirements..
        /// </summary>
        internal static string ATPRestrictedEducationNote {
            get {
                return ResourceManager.GetString("ATPRestrictedEducationNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This does not apply if you had other than an honorable discharge, or if you did not earn a rating as a military pilot.  %APP_NAME% cannot verify either of these..
        /// </summary>
        internal static string ATPRestrictedMilitaryNote {
            get {
                return ResourceManager.GetString("ATPRestrictedMilitaryNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0}* hours of flight time in an *{1} airplane*.
        /// </summary>
        internal static string ATPTimeInClass {
            get {
                return ResourceManager.GetString("ATPTimeInClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Per [61.159(c)](https://www.law.cornell.edu/cfr/text/14/61.159), SIC time and some Flight Engineer Time can contribute towards this; and per 61.159(a)(6) up to 100hrs of FTD/FFS time can also contribute.  %APP_NAME% assumes that the conditions for doing so have been met..
        /// </summary>
        internal static string ATPTotalTimeSubstitutionNote {
            get {
                return ResourceManager.GetString("ATPTotalTimeSubstitutionNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *100* hours of *cross-country PIC* time in *airplanes*.
        /// </summary>
        internal static string ATPXCPICTime {
            get {
                return ResourceManager.GetString("ATPXCPICTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one flight involving a controlled *ascent to {0:#,###}ft* above the launch site.
        /// </summary>
        internal static string BalloonAscent {
            get {
                return ResourceManager.GetString("BalloonAscent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *2* flights of at least *2* hours each in a *gas balloon*.
        /// </summary>
        internal static string BalloonGasMinFlights {
            get {
                return ResourceManager.GetString("BalloonGasMinFlights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One *2-hour* flight performing the *duties of Pilot-in-Command* in a *gas balloon*.
        /// </summary>
        internal static string BalloonGasMinFlightsDPIC {
            get {
                return ResourceManager.GetString("BalloonGasMinFlightsDPIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One *2-hour training* flight in a *gas balloon* within *2 calendar months* preceding the test.
        /// </summary>
        internal static string BalloonGasMinFlightTestPrep {
            get {
                return ResourceManager.GetString("BalloonGasMinFlightTestPrep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *Two training* flights of *1 hour* each within *2 calendar months* preceding the test in a *hot-air balloon*.
        /// </summary>
        internal static string BalloonHotAirMinFlightTestPrep {
            get {
                return ResourceManager.GetString("BalloonHotAirMinFlightTestPrep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One *solo* flight in a *hot-air balloon*.
        /// </summary>
        internal static string BalloonHotAirSolo {
            get {
                return ResourceManager.GetString("BalloonHotAirSolo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *6 training* flights with an *instructor* in a *ballooon*.
        /// </summary>
        internal static string BalloonMinFlights {
            get {
                return ResourceManager.GetString("BalloonMinFlights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10* hours of flight *training*.
        /// </summary>
        internal static string BalloonMinTraining {
            get {
                return ResourceManager.GetString("BalloonMinTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to aeroplanes.
        /// </summary>
        internal static string CAATPAeroplanes {
            get {
                return ResourceManager.GetString("CAATPAeroplanes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* additional hours of *cross-country* time as PIC.
        /// </summary>
        internal static string CAATPExtraXC {
            get {
                return ResourceManager.GetString("CAATPExtraXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Or, 200 hours of any combination of PIC/Co-Pilot cross-country time.
        /// </summary>
        internal static string CAATPExtraXCNote {
            get {
                return ResourceManager.GetString("CAATPExtraXCNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to helicopters.
        /// </summary>
        internal static string CAATPHelicopters {
            get {
                return ResourceManager.GetString("CAATPHelicopters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *instrument* flight.
        /// </summary>
        internal static string CAATPInstrument {
            get {
                return ResourceManager.GetString("CAATPInstrument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Up to {0:#,##0} hours of time in {1} can apply towards this.
        /// </summary>
        internal static string CAATPInstrumentNote {
            get {
                return ResourceManager.GetString("CAATPInstrumentNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of night as PIC or co-pilot.
        /// </summary>
        internal static string CAATPNight {
            get {
                return ResourceManager.GetString("CAATPNight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *night as PIC or co-pilot* in *{1}*.
        /// </summary>
        internal static string CAATPNightCategory {
            get {
                return ResourceManager.GetString("CAATPNightCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours as *PIC* in *{1}*.
        /// </summary>
        internal static string CAATPPIC {
            get {
                return ResourceManager.GetString("CAATPPIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Up to {0:#,##0} hours of PICUS time may be applied here; if both PICUS and PIC are logged on a flight, they are assumed to be simultaneous..
        /// </summary>
        internal static string CAATPPICUSNote {
            get {
                return ResourceManager.GetString("CAATPPICUSNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *cross-country PIC* in *{1}*.
        /// </summary>
        internal static string CAATPPICXC {
            get {
                return ResourceManager.GetString("CAATPPICXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *night cross-country PIC* in *{1}*.
        /// </summary>
        internal static string CAATPPICXCNight {
            get {
                return ResourceManager.GetString("CAATPPICXCNight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of flight time.
        /// </summary>
        internal static string CAATPTotalTime {
            get {
                return ResourceManager.GetString("CAATPTotalTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of flight time in *{1}*.
        /// </summary>
        internal static string CAATPTotalTimeInCategory {
            get {
                return ResourceManager.GetString("CAATPTotalTimeInCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *cross-country* time in *{1}*.
        /// </summary>
        internal static string CAATPXC {
            get {
                return ResourceManager.GetString("CAATPXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prior to earning your night rating, you cannot simultaneously apply night and instrument (IMC or hood) time, so any time that is clearly night and instrument here does not contribute to progress here..
        /// </summary>
        internal static string CANightDualNote {
            get {
                return ResourceManager.GetString("CANightDualNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *dual instrument* flying.
        /// </summary>
        internal static string CANightInstrument {
            get {
                return ResourceManager.GetString("CANightInstrument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Up to 5 hours of ground-sim time can contribute to this..
        /// </summary>
        internal static string CANightInstrumentNote {
            get {
                return ResourceManager.GetString("CANightInstrumentNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *solo night* flight.
        /// </summary>
        internal static string CANightSolo {
            get {
                return ResourceManager.GetString("CANightSolo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours in *{1}*.
        /// </summary>
        internal static string CANightTotalTime {
            get {
                return ResourceManager.GetString("CANightTotalTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a landplane.
        /// </summary>
        internal static string CAPPLClassLandPlane {
            get {
                return ResourceManager.GetString("CAPPLClassLandPlane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a seaplane.
        /// </summary>
        internal static string CAPPLClassSeaPlane {
            get {
                return ResourceManager.GetString("CAPPLClassSeaPlane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *dual instruction* in *{1}*.
        /// </summary>
        internal static string CAPPLDualInClass {
            get {
                return ResourceManager.GetString("CAPPLDualInClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Up to 3 hours may be performed in a ground simulator.
        /// </summary>
        internal static string CAPPLGroundSimNote {
            get {
                return ResourceManager.GetString("CAPPLGroundSimNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *flight training*.
        /// </summary>
        internal static string CAPPLMinTime {
            get {
                return ResourceManager.GetString("CAPPLMinTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *cross-country dual* flight time.
        /// </summary>
        internal static string CAPPLMinXC {
            get {
                return ResourceManager.GetString("CAPPLMinXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *solo* time.
        /// </summary>
        internal static string CAPPLSolo {
            get {
                return ResourceManager.GetString("CAPPLSolo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *5* takeoffs and landings as the *sole occupant* of *{0}*.
        /// </summary>
        internal static string CAPPLSoloLandingsInClass {
            get {
                return ResourceManager.GetString("CAPPLSoloLandingsInClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %APP_NAME% is just looking for total landings, assuming that you did the takeoffs.  For seaplanes, if the aircraft requires two crewmembers, then you may substitute PIC time for this.  %APP_NAME% does not do this for you..
        /// </summary>
        internal static string CAPPLSoloNote {
            get {
                return ResourceManager.GetString("CAPPLSoloNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of training in *{1}*.
        /// </summary>
        internal static string CAPPLTimeInClass {
            get {
                return ResourceManager.GetString("CAPPLTimeInClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of aeronautical experience.
        /// </summary>
        internal static string CASRAeronauticalExperience {
            get {
                return ResourceManager.GetString("CASRAeronauticalExperience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to in an airplane.
        /// </summary>
        internal static string CASRCategoryAirplane {
            get {
                return ResourceManager.GetString("CASRCategoryAirplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to in a gyroplane.
        /// </summary>
        internal static string CASRCategoryGyroplane {
            get {
                return ResourceManager.GetString("CASRCategoryGyroplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to in a helicopter.
        /// </summary>
        internal static string CASRCategoryHelicopter {
            get {
                return ResourceManager.GetString("CASRCategoryHelicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *instrument* time.
        /// </summary>
        internal static string CASRCommIFR {
            get {
                return ResourceManager.GetString("CASRCommIFR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *instrument* time (*{1}*).
        /// </summary>
        internal static string CASRCommIFRInCategory {
            get {
                return ResourceManager.GetString("CASRCommIFRInCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 *cross-country* flight as *PIC* (*{0}*) that is at least *{1}NM* and includes *{2}* at at least *2* other airports or landing areas.
        /// </summary>
        internal static string CASRCommLongCrossCountry {
            get {
                return ResourceManager.GetString("CASRCommLongCrossCountry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of flight time as *PIC* (*{1}*).
        /// </summary>
        internal static string CASRCommPIC {
            get {
                return ResourceManager.GetString("CASRCommPIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *cross-country* time as *PIC* (*{1}*).
        /// </summary>
        internal static string CASRCommPICXC {
            get {
                return ResourceManager.GetString("CASRCommPICXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to full-stop landings.
        /// </summary>
        internal static string CASRFullStopLandings {
            get {
                return ResourceManager.GetString("CASRFullStopLandings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to landings.
        /// </summary>
        internal static string CASRLandings {
            get {
                return ResourceManager.GetString("CASRLandings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *dual instrument* time.
        /// </summary>
        internal static string CASRPPLDualIFR {
            get {
                return ResourceManager.GetString("CASRPPLDualIFR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 hour of *dual instrument* time (*{0}*).
        /// </summary>
        internal static string CASRPPLDualIFRInCategory {
            get {
                return ResourceManager.GetString("CASRPPLDualIFRInCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *solo* time (*{1}*).
        /// </summary>
        internal static string CASRPPLMinSoloTimeInCategory {
            get {
                return ResourceManager.GetString("CASRPPLMinSoloTimeInCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *solo cross-country* flight time (*{1}*).
        /// </summary>
        internal static string CASRPPLMinSoloXCTimeInCategory {
            get {
                return ResourceManager.GetString("CASRPPLMinSoloXCTimeInCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of flight time as a pilot.
        /// </summary>
        internal static string CASRPPLMinTime {
            get {
                return ResourceManager.GetString("CASRPPLMinTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of flight time as a pilot (*{1}*).
        /// </summary>
        internal static string CASRPPLMinTimeInCategory {
            get {
                return ResourceManager.GetString("CASRPPLMinTimeInCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 *solo cross-country* flight (*{0}*) that is at least *{1}NM* and includes *{2}* at at least *2* other airports or landing areas.
        /// </summary>
        internal static string CASRPPLSoloLongCrossCountry {
            get {
                return ResourceManager.GetString("CASRPPLSoloLongCrossCountry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *100* hours as *PIC* in a *powered aircraft*.
        /// </summary>
        internal static string CFISASELPICPowered {
            get {
                return ResourceManager.GetString("CFISASELPICPowered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *50* hours of flight time in a *single-engine airplane*.
        /// </summary>
        internal static string CFISASELTotalSEL {
            get {
                return ResourceManager.GetString("CFISASELTotalSEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *150* hours of flight time as a pilot.
        /// </summary>
        internal static string CFISASELTotalTime {
            get {
                return ResourceManager.GetString("CFISASELTotalTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *25* hours of *cross-country* flight time..
        /// </summary>
        internal static string CFISASELXC {
            get {
                return ResourceManager.GetString("CFISASELXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10* hours of *cross-country* flight time in a *single-engine airplane*.
        /// </summary>
        internal static string CFISASELXCSEL {
            get {
                return ResourceManager.GetString("CFISASELXCSEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *PIC* time in *{1}*.
        /// </summary>
        internal static string CFITimeInCategoryClass {
            get {
                return ResourceManager.GetString("CFITimeInCategoryClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One *cross-country* flight in *daytime* conditions that is at least *{0}hrs* and goes at least *{1}NM* from the point of departure.
        /// </summary>
        internal static string Comm141DayXCFlight {
            get {
                return ResourceManager.GetString("Comm141DayXCFlight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For an airplane rating, a view-limiting device is required, so this is looking for simulated instrument conditions; unusual attitudes, partial panel operations, attitude instrument flying, etc., are all assumed.
        /// </summary>
        internal static string Comm141InstrumentTrainingNote {
            get {
                return ResourceManager.GetString("Comm141InstrumentTrainingNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *training* in *{1}* that is *complex or turbine-powered*.
        /// </summary>
        internal static string Comm141MinComplexOrTurbine {
            get {
                return ResourceManager.GetString("Comm141MinComplexOrTurbine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *instrument training*.
        /// </summary>
        internal static string Comm141MinInstrumentTraining {
            get {
                return ResourceManager.GetString("Comm141MinInstrumentTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *instrument training* in *{1}*.
        /// </summary>
        internal static string Comm141MinInstrumentTrainingInCatClass {
            get {
                return ResourceManager.GetString("Comm141MinInstrumentTrainingInCatClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of flight *training* from a CFI.
        /// </summary>
        internal static string Comm141MinTime {
            get {
                return ResourceManager.GetString("Comm141MinTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of flight *training*.
        /// </summary>
        internal static string Comm141MinTimeOverall {
            get {
                return ResourceManager.GetString("Comm141MinTimeOverall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One *cross-country* flight in *nighttime* conditions that is at least *{0:#,##0}hrs* and goes at least *{1}NM* from the point of departure.
        /// </summary>
        internal static string Comm141NightXCFlight {
            get {
                return ResourceManager.GetString("Comm141NightXCFlight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Per 141 Appendix D (4)(c), you may be entitled to credit time in a simulator or FTD, depending on the certification level of the device.  Time in training devices is NOT included here..
        /// </summary>
        internal static string Comm141OverallTimeNote {
            get {
                return ResourceManager.GetString("Comm141OverallTimeNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *solo* (or duties-of-PIC with an authorized instructor on board) flight in *night VFR* conditions.
        /// </summary>
        internal static string Comm141SoloNight {
            get {
                return ResourceManager.GetString("Comm141SoloNight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0} solo landings at night* (VFR conditions).
        /// </summary>
        internal static string Comm141SoloNightLandings {
            get {
                return ResourceManager.GetString("Comm141SoloNightLandings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0} solo takeoffs at night* (VFR conditions).
        /// </summary>
        internal static string Comm141SoloNightTakeoffs {
            get {
                return ResourceManager.GetString("Comm141SoloNightTakeoffs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *solo* time (or duties-of-PIC with an authorized instructor on board) in *{1}*.
        /// </summary>
        internal static string Comm141SoloTime {
            get {
                return ResourceManager.GetString("Comm141SoloTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One *solo* (or duties-of-PIC with an authorized instructor on board) *cross country* flight with at least *3* landings and a segment with a straight-line distance of at least *{0}NM*.
        /// </summary>
        internal static string Comm141SoloXCFlight {
            get {
                return ResourceManager.GetString("Comm141SoloXCFlight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In Hawaii, a cross-country segment of 150NM satisfies this.
        /// </summary>
        internal static string Comm141SoloXCHawaiiNote {
            get {
                return ResourceManager.GetString("Comm141SoloXCHawaiiNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of test prep in *{1}* within *{2} days* preceding the test.
        /// </summary>
        internal static string Comm141TestPrep {
            get {
                return ResourceManager.GetString("Comm141TestPrep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %APP_NAME% is showing whether you are eligible to take the practical test TODAY; this progress can decay over time after your checkride.  This is looking for dual received..
        /// </summary>
        internal static string Comm141TestPrepNote {
            get {
                return ResourceManager.GetString("Comm141TestPrepNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any dual received is assumed to cover the required areas of operation..
        /// </summary>
        internal static string Comm141TrainingNote {
            get {
                return ResourceManager.GetString("Comm141TrainingNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One flight involving a controlled ascent to *{0:#,###}ft* above the launch site.
        /// </summary>
        internal static string CommBalloonAscent {
            get {
                return ResourceManager.GetString("CommBalloonAscent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *2* flights performing *duties of PIC* in a *gas balloon*.
        /// </summary>
        internal static string CommBalloonDPIC {
            get {
                return ResourceManager.GetString("CommBalloonDPIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *Two training* flights of *2* hours each within *2 calendar months* preceding the test *in a gas balloon*.
        /// </summary>
        internal static string CommBalloonGasTestPrep {
            get {
                return ResourceManager.GetString("CommBalloonGasTestPrep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *Two training* flights of *1 hour* each within *2* calendar months preceding the test in a *hot air balloon*.
        /// </summary>
        internal static string CommBalloonHotAirTestPrep {
            get {
                return ResourceManager.GetString("CommBalloonHotAirTestPrep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10* flights in *balloons*.
        /// </summary>
        internal static string CommBalloonMinFlights {
            get {
                return ResourceManager.GetString("CommBalloonMinFlights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *Two* flights in *balloons* as *PIC*.
        /// </summary>
        internal static string CommBalloonMinPIC {
            get {
                return ResourceManager.GetString("CommBalloonMinPIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *20* hours in *balloons*.
        /// </summary>
        internal static string CommBalloonMinTime {
            get {
                return ResourceManager.GetString("CommBalloonMinTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *Two solo* flights in a *hot air balloon*.
        /// </summary>
        internal static string CommBalloonSolo {
            get {
                return ResourceManager.GetString("CommBalloonSolo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10 training* flights in *balloons*.
        /// </summary>
        internal static string CommBalloonTrainingFlights {
            get {
                return ResourceManager.GetString("CommBalloonTrainingFlights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10* hours of flight *training* in *balloons*.
        /// </summary>
        internal static string CommBalloonTrainingTime {
            get {
                return ResourceManager.GetString("CommBalloonTrainingTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *35* hours of *dual* instruction in *aeroplanes* (since PPL).
        /// </summary>
        internal static string CommCanadaMinDual {
            get {
                return ResourceManager.GetString("CommCanadaMinDual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *200* hours in *aeroplanes*.
        /// </summary>
        internal static string CommCanadaMinHours {
            get {
                return ResourceManager.GetString("CommCanadaMinHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *20* hours of *instrument instruction* in *aeroplanes* (since PPL).
        /// </summary>
        internal static string CommCanadaMinIFRDual {
            get {
                return ResourceManager.GetString("CommCanadaMinIFRDual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Up to 10 hours of this time may be performed in approved simulators.
        /// </summary>
        internal static string CommCanadaMinIFRNote {
            get {
                return ResourceManager.GetString("CommCanadaMinIFRNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *5* hours of *night dual instruction* in *aeroplanes* (since PPL).
        /// </summary>
        internal static string CommCanadaMinNightDual {
            get {
                return ResourceManager.GetString("CommCanadaMinNightDual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *2* hours of *night-cross-country instruction* in *aeroplanes* (since PPL).
        /// </summary>
        internal static string CommCanadaMinNightDualXC {
            get {
                return ResourceManager.GetString("CommCanadaMinNightDualXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *100* hours *PIC* time in *aeroplanes*.
        /// </summary>
        internal static string CommCanadaMinPIC {
            get {
                return ResourceManager.GetString("CommCanadaMinPIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *20* hours of *cross-country PIC* time in *aeroplanes*.
        /// </summary>
        internal static string CommCanadaMinPICXC {
            get {
                return ResourceManager.GetString("CommCanadaMinPICXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *30* hours of *solo* flight time (since PPL).
        /// </summary>
        internal static string CommCanadaMinSolo {
            get {
                return ResourceManager.GetString("CommCanadaMinSolo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *5* hours of *cross-country instruction* in aeroplanes (since PPL).
        /// </summary>
        internal static string CommCanadaMinXCDual {
            get {
                return ResourceManager.GetString("CommCanadaMinXCDual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *5* hours *solo* time at *night* (since PPL).
        /// </summary>
        internal static string CommCanadaSoloNight {
            get {
                return ResourceManager.GetString("CommCanadaSoloNight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10 solo landings* at *night* (since PPL, circuits are assumed).
        /// </summary>
        internal static string CommCanadaSoloNightLandings {
            get {
                return ResourceManager.GetString("CommCanadaSoloNightLandings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10 solo takeoffs* at *night* (since PPL) (circuits are assumed).
        /// </summary>
        internal static string CommCanadaSoloNightTakeoffs {
            get {
                return ResourceManager.GetString("CommCanadaSoloNightTakeoffs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The regs require an emphasis on &quot;the improvement of general flying skills&quot;; this is assumed..
        /// </summary>
        internal static string CommCanadaSoloNote {
            get {
                return ResourceManager.GetString("CommCanadaSoloNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *Solo cross-country* flight at least *300NM* away from the point of departure, with at least *3* landings (since PPL).
        /// </summary>
        internal static string CommCanadaSoloXC {
            get {
                return ResourceManager.GetString("CommCanadaSoloXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %APP_NAME% cannot determine what ratings you held when a given flight was logged.  Per FAA interpretation (Google &quot;Theriault 61.129&quot; for details), activities displayed here that were done while still a student pilot may not actually count towards your rating..
        /// </summary>
        internal static string CommGeneralDisclaimer {
            get {
                return ResourceManager.GetString("CommGeneralDisclaimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0}* flights as *PIC* in a *glider*.
        /// </summary>
        internal static string CommGliderFlightsPIC {
            get {
                return ResourceManager.GetString("CommGliderFlightsPIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *25* hours of *glider* time.
        /// </summary>
        internal static string CommGliderGliderTime {
            get {
                return ResourceManager.GetString("CommGliderGliderTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *200* hours of flight time in *heavier-than-air* aircraft.
        /// </summary>
        internal static string CommGliderHeavierThanAir {
            get {
                return ResourceManager.GetString("CommGliderHeavierThanAir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0} solo* flights in a *glider*.
        /// </summary>
        internal static string CommGliderSoloFlights {
            get {
                return ResourceManager.GetString("CommGliderSoloFlights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *2* hours of *solo* flight (glider is assumed).
        /// </summary>
        internal static string CommGliderSoloTime {
            get {
                return ResourceManager.GetString("CommGliderSoloTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3 training* flights in a *glider* within *2* calendar months preceding the test.
        /// </summary>
        internal static string CommGliderTestPrep {
            get {
                return ResourceManager.GetString("CommGliderTestPrep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10 training* flights in a *glider*.
        /// </summary>
        internal static string CommGliderTrainingFlights {
            get {
                return ResourceManager.GetString("CommGliderTrainingFlights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3* hours of flight *training* in a *glider*.
        /// </summary>
        internal static string CommGliderTrainingTime {
            get {
                return ResourceManager.GetString("CommGliderTrainingTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10 night training landings* to full stop in a *gyroplane*.
        /// </summary>
        internal static string CommGyroplaneNightLandings {
            get {
                return ResourceManager.GetString("CommGyroplaneNightLandings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10 night training takeoffs* in a *gyroplane*.
        /// </summary>
        internal static string CommGyroplaneNightTakeoffs {
            get {
                return ResourceManager.GetString("CommGyroplaneNightTakeoffs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *2* hours of *night training* in a *gyroplane*.
        /// </summary>
        internal static string CommGyroplaneNightTraining {
            get {
                return ResourceManager.GetString("CommGyroplaneNightTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10* hours of *training* in a *complex* (or turbine, or TAA) *multi-engine airplane*.
        /// </summary>
        internal static string CommMinComplexAMEL {
            get {
                return ResourceManager.GetString("CommMinComplexAMEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10* hours of *training* in a *multi-engine seaplane* with flaps and a controllable pitch propeller (or turbine, or TAA)..
        /// </summary>
        internal static string CommMinComplexAMES {
            get {
                return ResourceManager.GetString("CommMinComplexAMES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10* hours of *training* in a *complex* (or turbine, or TAA) airplane.
        /// </summary>
        internal static string CommMinComplexASEL {
            get {
                return ResourceManager.GetString("CommMinComplexASEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10* hours of *training* in a *single-engine seaplane* with flaps and a controllable pitch propeller (or turbine, or TAA)..
        /// </summary>
        internal static string CommMinComplexASES {
            get {
                return ResourceManager.GetString("CommMinComplexASES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *5* hours *solo* in *night* VFR conditions in *{0}*.
        /// </summary>
        internal static string CommMinNightFlight {
            get {
                return ResourceManager.GetString("CommMinNightFlight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10 solo* landings at *night* in *{0}* (flight in the traffic pattern and a control tower are assumed).
        /// </summary>
        internal static string CommMinNightLandings {
            get {
                return ResourceManager.GetString("CommMinNightLandings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10 solo* takeoffs at *night* in *{0}*.
        /// </summary>
        internal static string CommMinNightTakeoffs {
            get {
                return ResourceManager.GetString("CommMinNightTakeoffs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours *PIC* time.
        /// </summary>
        internal static string CommMinPIC {
            get {
                return ResourceManager.GetString("CommMinPIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours as *PIC* in *{1}*.
        /// </summary>
        internal static string CommMinPICInCategory {
            get {
                return ResourceManager.GetString("CommMinPICInCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours *PIC* in *cross-country* flight.
        /// </summary>
        internal static string CommMinPICXC {
            get {
                return ResourceManager.GetString("CommMinPICXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours *PIC* in *cross-country* flight in *{1}*.
        /// </summary>
        internal static string CommMinPICXCInCategory {
            get {
                return ResourceManager.GetString("CommMinPICXCInCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours in *{1}*.
        /// </summary>
        internal static string CommMinPoweredInCategory {
            get {
                return ResourceManager.GetString("CommMinPoweredInCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours in *powered aircraft*.
        /// </summary>
        internal static string CommMinPoweredTime {
            get {
                return ResourceManager.GetString("CommMinPoweredTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *simulated IFR training*.
        /// </summary>
        internal static string CommMinSimIMC {
            get {
                return ResourceManager.GetString("CommMinSimIMC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0.#}* hours of *simulated IFR training* in *{1}*.
        /// </summary>
        internal static string CommMinSimIMCInCategory {
            get {
                return ResourceManager.GetString("CommMinSimIMCInCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of flight time as a pilot..
        /// </summary>
        internal static string CommMinTime {
            get {
                return ResourceManager.GetString("CommMinTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *flight training*.
        /// </summary>
        internal static string CommMinTraining {
            get {
                return ResourceManager.GetString("CommMinTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *solo* time in *{1}*.
        /// </summary>
        internal static string CommPICSoloCategory {
            get {
                return ResourceManager.GetString("CommPICSoloCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A *solo cross-country* flight in *{0}* of not less than *300NM* total distance, with *3 landings*, at least one of which is *250NM* away from the departure point (straight line)..
        /// </summary>
        internal static string CommPICSoloXCCategory {
            get {
                return ResourceManager.GetString("CommPICSoloXCCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time spent performing duties of PIC with an authorized instructor on board may count towards this; however, since this is a substitute for solo, any dual instruction time received will be subtracted from duties-of-PIC time, which may prevent a flight from counting towards this.  (Google &quot;FAA duties of PIC Kuhn&quot; for details)  Also, note that you may use solo time OR duties-of-PIC-with-an-instructor, but not both; whichever has more time is displayed here.  (Google &quot;FAA 2016 Grannis Solo&quot; for details.) .
        /// </summary>
        internal static string CommSoloNote {
            get {
                return ResourceManager.GetString("CommSoloNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A *cross-country flight* in a *gyroplane* with landings at *3* points, with one segment at least *50NM* from the original point of departure..
        /// </summary>
        internal static string CommSoloXCGyroplane {
            get {
                return ResourceManager.GetString("CommSoloXCGyroplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A *cross-country flight* in a *helicopter* with landings at *3* points, with one segment at least *50NM* from the original point of departure..
        /// </summary>
        internal static string CommSoloXCHelicopter {
            get {
                return ResourceManager.GetString("CommSoloXCHelicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A *2-hour cross-country training* flight in *{0}* in *daytime* conditions with total distance (straight line) over *{1}NM* from the point of departure..
        /// </summary>
        internal static string CommXCCategory {
            get {
                return ResourceManager.GetString("CommXCCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A *2-hour night cross-country training* flight in *{0}* with total distance (straight line) over *{1}NM* from point of departure..
        /// </summary>
        internal static string CommXCCategoryNight {
            get {
                return ResourceManager.GetString("CommXCCategoryNight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed: .
        /// </summary>
        internal static string CompletedHeader {
            get {
                return ResourceManager.GetString("CompletedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a new rating.
        /// </summary>
        internal static string CustomProgressAddNewRating {
            get {
                return ResourceManager.GetString("CustomProgressAddNewRating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create/edit custom ratings.
        /// </summary>
        internal static string CustomProgressCreate {
            get {
                return ResourceManager.GetString("CustomProgressCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete this rating.
        /// </summary>
        internal static string CustomProgressDelete {
            get {
                return ResourceManager.GetString("CustomProgressDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete this rating?  This cannot be undone!.
        /// </summary>
        internal static string CustomProgressDeleteConfirm {
            get {
                return ResourceManager.GetString("CustomProgressDeleteConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete this milestone.
        /// </summary>
        internal static string CustomProgressDeleteMilestone {
            get {
                return ResourceManager.GetString("CustomProgressDeleteMilestone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete this milestone?  This cannot be undone!.
        /// </summary>
        internal static string CustomProgressDeleteMilestoneConfirm {
            get {
                return ResourceManager.GetString("CustomProgressDeleteMilestoneConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Existing Milestones.
        /// </summary>
        internal static string CustomProgressExistingMilestones {
            get {
                return ResourceManager.GetString("CustomProgressExistingMilestones", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Longer Description or notes.
        /// </summary>
        internal static string CustomProgressGenDisclaimerPrompt {
            get {
                return ResourceManager.GetString("CustomProgressGenDisclaimerPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note:.
        /// </summary>
        internal static string CustomProgressItemNewMilestoneNote {
            get {
                return ResourceManager.GetString("CustomProgressItemNewMilestoneNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add any text here that you want to display along with progress for the milestone, such as assumptions made or alternatives that may be allowed.
        /// </summary>
        internal static string CustomProgressItemNewMilestoneNoteTip {
            get {
                return ResourceManager.GetString("CustomProgressItemNewMilestoneNoteTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0}* - {1}: *{3}* exceeds *{2}* {4}.
        /// </summary>
        internal static string CustomProgressItemTemplate {
            get {
                return ResourceManager.GetString("CustomProgressItemTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to for flights matching saved search *{0}*.
        /// </summary>
        internal static string CustomProgressItemTemplateQueryApplied {
            get {
                return ResourceManager.GetString("CustomProgressItemTemplateQueryApplied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add/Edit Milestones for &quot;{0}&quot;.
        /// </summary>
        internal static string CustomProgressMilestonesForCustomRating {
            get {
                return ResourceManager.GetString("CustomProgressMilestonesForCustomRating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add new milestone/criteria.
        /// </summary>
        internal static string CustomProgressNewMilestoneAdd {
            get {
                return ResourceManager.GetString("CustomProgressNewMilestoneAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (All Flights).
        /// </summary>
        internal static string CustomProgressNewMilestoneAllFlightsQuery {
            get {
                return ResourceManager.GetString("CustomProgressNewMilestoneAllFlightsQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add/Edit Milestones.
        /// </summary>
        internal static string CustomProgressNewMilestoneEditMilestones {
            get {
                return ResourceManager.GetString("CustomProgressNewMilestoneEditMilestones", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference:.
        /// </summary>
        internal static string CustomProgressNewMilestoneFARRef {
            get {
                return ResourceManager.GetString("CustomProgressNewMilestoneFARRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name and section/subsection for the regulation, or a simple number for sorting.
        /// </summary>
        internal static string CustomProgressNewMilestoneFARRefNote {
            get {
                return ResourceManager.GetString("CustomProgressNewMilestoneFARRefNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A reference must be provided.  You can use a simple number for sorting..
        /// </summary>
        internal static string CustomProgressNewMilestoneFARRefRequired {
            get {
                return ResourceManager.GetString("CustomProgressNewMilestoneFARRefRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For flights matching:.
        /// </summary>
        internal static string CustomProgressNewMilestoneQuery {
            get {
                return ResourceManager.GetString("CustomProgressNewMilestoneQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is at least:.
        /// </summary>
        internal static string CustomProgressNewMilestoneThreshold {
            get {
                return ResourceManager.GetString("CustomProgressNewMilestoneThreshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A threshold greater than 0 is required.
        /// </summary>
        internal static string CustomProgressNewMilestoneThresholdRequired {
            get {
                return ResourceManager.GetString("CustomProgressNewMilestoneThresholdRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description:.
        /// </summary>
        internal static string CustomProgressNewMilestoneTitle {
            get {
                return ResourceManager.GetString("CustomProgressNewMilestoneTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A title is required.
        /// </summary>
        internal static string CustomProgressNewMilestoneTitleRequired {
            get {
                return ResourceManager.GetString("CustomProgressNewMilestoneTitleRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hint: surround words with asterisks (*) to make them bold..
        /// </summary>
        internal static string CustomProgressNewMilestoneTitleTip {
            get {
                return ResourceManager.GetString("CustomProgressNewMilestoneTitleTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sum of: .
        /// </summary>
        internal static string CustomProgressNewMilestoneValue {
            get {
                return ResourceManager.GetString("CustomProgressNewMilestoneValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (No milestones found).
        /// </summary>
        internal static string CustomProgressNoItemsFound {
            get {
                return ResourceManager.GetString("CustomProgressNoItemsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (No ratings found).
        /// </summary>
        internal static string CustomProgressNoneFound {
            get {
                return ResourceManager.GetString("CustomProgressNoneFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Ratings/Progress.
        /// </summary>
        internal static string CustomProgressSection {
            get {
                return ResourceManager.GetString("CustomProgressSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title for this rating.
        /// </summary>
        internal static string CustomProgressTitlePrompt {
            get {
                return ResourceManager.GetString("CustomProgressTitlePrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title is required.
        /// </summary>
        internal static string CustomProgressTitleRequired {
            get {
                return ResourceManager.GetString("CustomProgressTitleRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following flights were not included because the cross-country distance did not meet the requirements of 61.1 for this rating:.
        /// </summary>
        internal static string DetailFlightsIgnored {
            get {
                return ResourceManager.GetString("DetailFlightsIgnored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours *CFI* time in *{1}*.
        /// </summary>
        internal static string DPECFICategory {
            get {
                return ResourceManager.GetString("DPECFICategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours CFI time in *{1}*.
        /// </summary>
        internal static string DPECFIClass {
            get {
                return ResourceManager.GetString("DPECFIClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For large turbine-powered aircraft, you also need 300 hours acting as PIC in large turbine-powered aircraft, of which 50 hours are in the type sought..
        /// </summary>
        internal static string DPECommInstrumentDisclaimer {
            get {
                return ResourceManager.GetString("DPECommInstrumentDisclaimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours *PIC* time in *complex* airplanes.
        /// </summary>
        internal static string DPEComplex {
            get {
                return ResourceManager.GetString("DPEComplex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* flights in past *12 months* in *{1}*.
        /// </summary>
        internal static string DPEFlightsPastYear {
            get {
                return ResourceManager.GetString("DPEFlightsPastYear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0} PIC hours* of *instrument* flight (actual or simulated).
        /// </summary>
        internal static string DPEInstrument {
            get {
                return ResourceManager.GetString("DPEInstrument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *instrument instruction*.
        /// </summary>
        internal static string DPEInstrumentInstruction {
            get {
                return ResourceManager.GetString("DPEInstrumentInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least 100 hours of this must be preparing pilots for their commercial certificate; %APP_NAME% cannot verify this..
        /// </summary>
        internal static string DPEInstrumentInstructionDisclaimer {
            get {
                return ResourceManager.GetString("DPEInstrumentInstructionDisclaimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of instrument instruction in *{1}*.
        /// </summary>
        internal static string DPEInstrumentInstructionInCategory {
            get {
                return ResourceManager.GetString("DPEInstrumentInstructionInCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Per 8900.2A, Chapter 7, (1)(f)(2)(a), you must also have 5 hours in the same make and model of multi-engine airplane or helicopter in which you are to conduct tests..
        /// </summary>
        internal static string DPEMultiHelicopterDisclaimer {
            get {
                return ResourceManager.GetString("DPEMultiHelicopterDisclaimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours *PIC* time in *{1}*.
        /// </summary>
        internal static string DPEPICCategory {
            get {
                return ResourceManager.GetString("DPEPICCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours *PIC* time in *{1}*.
        /// </summary>
        internal static string DPEPICClass {
            get {
                return ResourceManager.GetString("DPEPICClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours *night PIC* Time.
        /// </summary>
        internal static string DPEPICNight {
            get {
                return ResourceManager.GetString("DPEPICNight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *PIC* time.
        /// </summary>
        internal static string DPEPICTime {
            get {
                return ResourceManager.GetString("DPEPICTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours *PIC* time in past *12 months* in *{1}*.
        /// </summary>
        internal static string DPEPICTimePastYear {
            get {
                return ResourceManager.GetString("DPEPICTimePastYear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to an airplane.
        /// </summary>
        internal static string EASAClassAirplane {
            get {
                return ResourceManager.GetString("EASAClassAirplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All time in airplanes or TMGs is included here, not just dual, on the assumption that if you have not yet earned your LAPL license, it&apos;s all training/instruction..
        /// </summary>
        internal static string EASAClassAirplaneNote {
            get {
                return ResourceManager.GetString("EASAClassAirplaneNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a helicopter.
        /// </summary>
        internal static string EASAClassHelicopter {
            get {
                return ResourceManager.GetString("EASAClassHelicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All time in helicopters is included here, not just dual, on the assumption that if you have not yet earned your LAPL license, it&apos;s all training/instruction.  35 hours of this must be in the same type of helicopter that will be used for your test.  Without knowing what type you will be using, %APP_NAME% cannot compute this for you..
        /// </summary>
        internal static string EASAClassHelicopterNote {
            get {
                return ResourceManager.GetString("EASAClassHelicopterNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a touring motor glider (TMG).
        /// </summary>
        internal static string EASAClassTMG {
            get {
                return ResourceManager.GetString("EASAClassTMG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours in *{1}*.
        /// </summary>
        internal static string EASALAPLAirplaneMinDual {
            get {
                return ResourceManager.GetString("EASALAPLAirplaneMinDual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *flight instruction* in *{1}*.
        /// </summary>
        internal static string EASALAPLAirplaneMinDualInClass {
            get {
                return ResourceManager.GetString("EASALAPLAirplaneMinDualInClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *supervised solo* time.
        /// </summary>
        internal static string EASALAPLAirplaneMinSolo {
            get {
                return ResourceManager.GetString("EASALAPLAirplaneMinSolo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *solo cross-country* flight time.
        /// </summary>
        internal static string EASALAPLAirplaneMinSoloXC {
            get {
                return ResourceManager.GetString("EASALAPLAirplaneMinSoloXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 *solo cross-country* flight of at least *{0}NM* with a *full-stop landing* at a different airport.
        /// </summary>
        internal static string EASALAPLAirplaneMinSoloXCMinDist {
            get {
                return ResourceManager.GetString("EASALAPLAirplaneMinSoloXCMinDist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to airplanes or TMGs.
        /// </summary>
        internal static string EASALAPLAirplaneOrTMG {
            get {
                return ResourceManager.GetString("EASALAPLAirplaneOrTMG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10* hours of *dual flight instruction* in a *sailplane*.
        /// </summary>
        internal static string EASALAPLSailplaneDual {
            get {
                return ResourceManager.GetString("EASALAPLSailplaneDual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *45* launches and landings..
        /// </summary>
        internal static string EASALAPLSailplaneLaunchesAndLandings {
            get {
                return ResourceManager.GetString("EASALAPLSailplaneLaunchesAndLandings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each landing assumes a corresponding launch.
        /// </summary>
        internal static string EASALAPLSailplaneLaunchesNotes {
            get {
                return ResourceManager.GetString("EASALAPLSailplaneLaunchesNotes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Up to 7 of these hours may be in a Touring Motor Glider (TMG).
        /// </summary>
        internal static string EASALAPLSailplaneNoteTMG {
            get {
                return ResourceManager.GetString("EASALAPLSailplaneNoteTMG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *2* hours of *supervised solo* flight time (solo or Duties of PIC with an instructor on board).
        /// </summary>
        internal static string EASALAPLSailplaneSolo {
            get {
                return ResourceManager.GetString("EASALAPLSailplaneSolo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EASA - LAPL(S) - Light Aircraft Pilot License, Sailplane.
        /// </summary>
        internal static string EASALAPLSailplaneTitle {
            get {
                return ResourceManager.GetString("EASALAPLSailplaneTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %APP_NAME% treats &quot;Sailplanes&quot; as synonymous with &quot;Glider&quot;, and &quot;Powered Sailplanes&quot; as synonymous with &quot;Touring Motor Glider (TMG)&quot;.
        /// </summary>
        internal static string EASALAPLSailplaneTMGNote {
            get {
                return ResourceManager.GetString("EASALAPLSailplaneTMGNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *15* hours in *sailplanes*.
        /// </summary>
        internal static string EASALAPLSailplaneTotal {
            get {
                return ResourceManager.GetString("EASALAPLSailplaneTotal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *1 solo cross-country* flight of at least *27NM* or *1* *dual cross-country* flight of at least *55NM*.
        /// </summary>
        internal static string EASALAPLSailplaneXC {
            get {
                return ResourceManager.GetString("EASALAPLSailplaneXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The regulations specify &quot;supervised solo&quot; - %APP_NAME% counts either solo time or Duties of PIC time with an instructor on-board towards this.
        /// </summary>
        internal static string EASASupervisedSoloNote {
            get {
                return ResourceManager.GetString("EASASupervisedSoloNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saved search &quot;{0}&quot; not found - cannot compute progress against rating..
        /// </summary>
        internal static string ErrCustomProgressQueryNotFound {
            get {
                return ResourceManager.GetString("ErrCustomProgressQueryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are not authorized to view the progress for the requested pilot.  Your progress is being shown instead..
        /// </summary>
        internal static string ErrUnauthorized {
            get {
                return ResourceManager.GetString("ErrUnauthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *20* flights in a *glider*.
        /// </summary>
        internal static string GliderMinFlights {
            get {
                return ResourceManager.GetString("GliderMinFlights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of flight time in a *glider*.
        /// </summary>
        internal static string GliderMinFlightTime {
            get {
                return ResourceManager.GetString("GliderMinFlightTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *2* hours of *solo* flight time in a *glider*.
        /// </summary>
        internal static string GliderMinSoloTime {
            get {
                return ResourceManager.GetString("GliderMinSoloTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3 training* flights with an *instructor* in a *glider* within *2* calendar months prior to test..
        /// </summary>
        internal static string GliderMinTestPrep {
            get {
                return ResourceManager.GetString("GliderMinTestPrep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10 solo* flights in a *glider*.
        /// </summary>
        internal static string GliderSoloFlights {
            get {
                return ResourceManager.GetString("GliderSoloFlights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10 solo landings* in a *glider*.
        /// </summary>
        internal static string GliderSoloLandings {
            get {
                return ResourceManager.GetString("GliderSoloLandings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note that 421.46(2)(b) also has requirements regarding the rating of your instructor; %APP_NAME% cannot determine this and thus does not measure it..
        /// </summary>
        internal static string InstrumentCanadaGeneralDisclaimer {
            get {
                return ResourceManager.GetString("InstrumentCanadaGeneralDisclaimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ADDITIONAL NOTES: The regulations require that the experience below be all done in a single type of helicopter; %APP_NAME% is not enforcing this. Please ensure that you have met these requirements in a single type of helicopter. The night qualification requirements cannot be deterministically computed and thus are omitted here..
        /// </summary>
        internal static string JARPPLHelicopterDisclaimer {
            get {
                return ResourceManager.GetString("JARPPLHelicopterDisclaimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *dual* instruction.
        /// </summary>
        internal static string JARPPLMinDual {
            get {
                return ResourceManager.GetString("JARPPLMinDual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours *instrument dual instruction* time.
        /// </summary>
        internal static string JARPPLMinDualInstrument {
            get {
                return ResourceManager.GetString("JARPPLMinDualInstrument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 *dual cross-country* flight at night of at least *{0}NM*.
        /// </summary>
        internal static string JARPPLMinDualNightLongXC {
            get {
                return ResourceManager.GetString("JARPPLMinDualNightLongXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *supervised solo*.
        /// </summary>
        internal static string JARPPLMinSolo {
            get {
                return ResourceManager.GetString("JARPPLMinSolo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 *solo cross-country* flight of at least *{0}NM*, including *2 full-stop landings* at *2 airports* other than the point of departure.
        /// </summary>
        internal static string JARPPLMinSoloLongXC {
            get {
                return ResourceManager.GetString("JARPPLMinSoloLongXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (&quot;Supervised solo&quot; includes solo time or Duties of PIC time with an authorized instructor on board).
        /// </summary>
        internal static string JARPPLMinSoloNote {
            get {
                return ResourceManager.GetString("JARPPLMinSoloNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *solo cross-country* flight time.
        /// </summary>
        internal static string JARPPLMinSoloXC {
            get {
                return ResourceManager.GetString("JARPPLMinSoloXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of flight time.
        /// </summary>
        internal static string JARPPLMinTime {
            get {
                return ResourceManager.GetString("JARPPLMinTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (May include up to 5 hours of simulator time; %APP_NAME% will include anything in which you can log an instrument approach).
        /// </summary>
        internal static string JARPPLMinTimeNote {
            get {
                return ResourceManager.GetString("JARPPLMinTimeNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *night* flight in *airplanes*.
        /// </summary>
        internal static string JARPPLNight {
            get {
                return ResourceManager.GetString("JARPPLNight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *night dual* instruction.
        /// </summary>
        internal static string JARPPLNightDual {
            get {
                return ResourceManager.GetString("JARPPLNightDual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hour(s) of *night cross-country* navigation.
        /// </summary>
        internal static string JARPPLNightDualXC {
            get {
                return ResourceManager.GetString("JARPPLNightDualXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0} solo night full-stop* landings.
        /// </summary>
        internal static string JARPPLNightSoloLandings {
            get {
                return ResourceManager.GetString("JARPPLNightSoloLandings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0} solo night* takeoffs.
        /// </summary>
        internal static string JARPPLNightSoloTakeoffs {
            get {
                return ResourceManager.GetString("JARPPLNightSoloTakeoffs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: {1}.
        /// </summary>
        internal static string MatchingXCFlightTemplate {
            get {
                return ResourceManager.GetString("MatchingXCFlightTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3* hours of *cross-country training* in *{0}*.
        /// </summary>
        internal static string MinDualXC {
            get {
                return ResourceManager.GetString("MinDualXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *50* hours of *cross-country PIC* time.
        /// </summary>
        internal static string MinEASAIRXCPICTime {
            get {
                return ResourceManager.GetString("MinEASAIRXCPICTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *20 hours* of *cross-country PIC* time in *airplanes*.
        /// </summary>
        internal static string MinEASAIRXCPICTimeAirplanes {
            get {
                return ResourceManager.GetString("MinEASAIRXCPICTimeAirplanes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10* hours of *training* in an *airplane* by reference to *instruments*.
        /// </summary>
        internal static string MinIFRTrainingByRef {
            get {
                return ResourceManager.GetString("MinIFRTrainingByRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *15* hours of *training* in *instrument flying*.
        /// </summary>
        internal static string MinIFRTrainingUK {
            get {
                return ResourceManager.GetString("MinIFRTrainingUK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10* Hours of *cross-country* flight as *PIC* in *{0}*.
        /// </summary>
        internal static string MinInstrumentPICInCategory {
            get {
                return ResourceManager.GetString("MinInstrumentPICInCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *50* Hours of *cross-country* flight as *PIC*.
        /// </summary>
        internal static string MinInstrumentPICXC {
            get {
                return ResourceManager.GetString("MinInstrumentPICXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3* hours of *instrument* flight *training* in *{0}* within *2* calendar months prior to test..
        /// </summary>
        internal static string MinInstrumentTestPrep {
            get {
                return ResourceManager.GetString("MinInstrumentTestPrep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *40* hours of *actual or simulated instrument* time.
        /// </summary>
        internal static string MinInstrumentTime {
            get {
                return ResourceManager.GetString("MinInstrumentTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *35* Hours of *actual or simulated instrument* time.
        /// </summary>
        internal static string MinInstrumentTime141 {
            get {
                return ResourceManager.GetString("MinInstrumentTime141", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *15* hours of *instrument training* from an authorized instructor (CFII).
        /// </summary>
        internal static string MinInstrumentTraining {
            get {
                return ResourceManager.GetString("MinInstrumentTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *5* hours of *instrument training* in *{0}*.
        /// </summary>
        internal static string MinInstrumentTrainingInCategoryCanada {
            get {
                return ResourceManager.GetString("MinInstrumentTrainingInCategoryCanada", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *15* hours of *instrument training* from an authorized instructor.
        /// </summary>
        internal static string MinInstrumentTrainingNonUS {
            get {
                return ResourceManager.GetString("MinInstrumentTrainingNonUS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any dual with IMC or Simulated IMC contributes to this, but %APP_NAME% cannot determine what rating your instructor held, so this may OVERSTATE your progress.  Also, 61.65(h) and (i) are ambiguous whether ATD/FTD/FFS time contributes to this, so %APP_NAME% is conservative and only allows time in a real aircraft towards this requirement.  You may be able to apply more time than shown here..
        /// </summary>
        internal static string MinInstrumentTrainingNote {
            get {
                return ResourceManager.GetString("MinInstrumentTrainingNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A *cross-country* flight in *{0}* of at least *{1}NM* with at least *3* approaches..
        /// </summary>
        internal static string MinInstrumentXC {
            get {
                return ResourceManager.GetString("MinInstrumentXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A *cross-country* flight of at least *{0}NM* with at least *2 approaches* at *2 locations*.
        /// </summary>
        internal static string MinInstrumentXCCanada {
            get {
                return ResourceManager.GetString("MinInstrumentXCCanada", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assumes all approaches were done to minimums.
        /// </summary>
        internal static string MinInstrumentXCCanadaNote {
            get {
                return ResourceManager.GetString("MinInstrumentXCCanadaNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3 full-stop solo landings* at a *towered* airport.
        /// </summary>
        internal static string MinLandingsFSToweredAirport {
            get {
                return ResourceManager.GetString("MinLandingsFSToweredAirport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3 landings* at a *towered* airport.
        /// </summary>
        internal static string MinLandingsToweredAirport {
            get {
                return ResourceManager.GetString("MinLandingsToweredAirport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0}* *night landings (training)* to a *full stop* in *{1}*.
        /// </summary>
        internal static string MinNightFSLandings {
            get {
                return ResourceManager.GetString("MinNightFSLandings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0}* *night takeoffs (training)* in *{1}*.
        /// </summary>
        internal static string MinNightTakeoffs {
            get {
                return ResourceManager.GetString("MinNightTakeoffs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3* hours of *night flight training* in *{0}*.
        /// </summary>
        internal static string MinNightTime {
            get {
                return ResourceManager.GetString("MinNightTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3* hours of *flight training* by *reference to instruments* in *{0}*.
        /// </summary>
        internal static string MinSimulatedIMC {
            get {
                return ResourceManager.GetString("MinSimulatedIMC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10* hours of *solo* time.
        /// </summary>
        internal static string MinSolo {
            get {
                return ResourceManager.GetString("MinSolo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10* hours of *solo* time in *{0}*.
        /// </summary>
        internal static string MinSoloInType {
            get {
                return ResourceManager.GetString("MinSoloInType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3 solo takeoffs* at a *towered* airport.
        /// </summary>
        internal static string MinTakeoffsToweredAirport {
            get {
                return ResourceManager.GetString("MinTakeoffsToweredAirport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3* hours of *flight training* in *{0}* within *2 calendar months* prior to exam.
        /// </summary>
        internal static string MinTestPrep {
            get {
                return ResourceManager.GetString("MinTestPrep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *40* hours of *flight time*.
        /// </summary>
        internal static string MinTime {
            get {
                return ResourceManager.GetString("MinTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0}* hours of *flight training* (dual).
        /// </summary>
        internal static string MinTraining {
            get {
                return ResourceManager.GetString("MinTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10* hours as *PIC* in *aeroplanes*.
        /// </summary>
        internal static string MinUKPICTime {
            get {
                return ResourceManager.GetString("MinUKPICTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *5* hours as *PIC* in *aeroplanes* in *cross-country* flight.
        /// </summary>
        internal static string MinUKPICXCTime {
            get {
                return ResourceManager.GetString("MinUKPICXCTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *25* hours in *aeroplanes*.
        /// </summary>
        internal static string MinUKTotalTimeTraining {
            get {
                return ResourceManager.GetString("MinUKTotalTimeTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is required to be after issuance of a PPL certificate; %APP_NAME% cannot determine reliably when you earned this, so may OVERSTATE your time here.
        /// </summary>
        internal static string MinUKTotalTimeTrainingNote {
            get {
                return ResourceManager.GetString("MinUKTotalTimeTrainingNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One *solo cross-country* flight of *{1}NM* total distance and a leg that is at least *{2}NM*, with *three takeoffs and landings to a full-stop* in *{0}*.
        /// </summary>
        internal static string MinXCDistance {
            get {
                return ResourceManager.GetString("MinXCDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One *solo cross-country* flight in *{0}* of *{1}NM* total distance and landings at least *{2}NM* apart, with *three landings*.
        /// </summary>
        internal static string MinXCDistanceHelicopter {
            get {
                return ResourceManager.GetString("MinXCDistanceHelicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One *night-time cross-country training* flight of over *{1}NM* distance in *{0}*.
        /// </summary>
        internal static string MinXCNight {
            get {
                return ResourceManager.GetString("MinXCNight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One *night-time cross-country* flight of over *50nm* distance in *{0}*.
        /// </summary>
        internal static string MinXCNight50nm {
            get {
                return ResourceManager.GetString("MinXCNight50nm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{1}* hours of *solo cross-country* time in *{0}*.
        /// </summary>
        internal static string MinXCSolo {
            get {
                return ResourceManager.GetString("MinXCSolo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only 15 hours are required if this is for an additional instrument rating.  Use of simulators/FTDs/ATDs are included up to the limits described by 141 Appendix (C)(4)(b).
        /// </summary>
        internal static string Note141InstrumentReducedHours {
            get {
                return ResourceManager.GetString("Note141InstrumentReducedHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you log simulated instrument time, it is assumed that you practiced partial panel, unusual flight attitudes, intercepting/tracking, etc., as required..
        /// </summary>
        internal static string Note611293i {
            get {
                return ResourceManager.GetString("Note611293i", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR [61.129(i)](https://www.law.cornell.edu/cfr/text/14/61.129) provides mechanisms by which time in a simulator or FTD may count towards requirements in 61.129, based on various conditions.  %APP_NAME% does NOT include time in a training device towards your goal, so you may have met it even if %APP_NAME% says otherwise..
        /// </summary>
        internal static string Note61129TrainingDevice {
            get {
                return ResourceManager.GetString("Note61129TrainingDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Maximum Altitude property for the flight is used to determine if this is met; be sure to use an AGL value rather than MSL..
        /// </summary>
        internal static string NoteBalloonAscent {
            get {
                return ResourceManager.GetString("NoteBalloonAscent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only includes time in helicopters or airplanes.
        /// </summary>
        internal static string NoteCanadaIRXC {
            get {
                return ResourceManager.GetString("NoteCanadaIRXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cross-country PIC for a flight is determined as the minimum of PIC time and cross-country time for that flight.
        /// </summary>
        internal static string NoteCommMinPICXC {
            get {
                return ResourceManager.GetString("NoteCommMinPICXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %APP_NAME% assumes that if you have solo time in a flight, you were solo for the launch and landings as well, and that you had as many launches as landings..
        /// </summary>
        internal static string NoteGliderSoloLandings {
            get {
                return ResourceManager.GetString("NoteGliderSoloLandings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: .
        /// </summary>
        internal static string NoteHeader {
            get {
                return ResourceManager.GetString("NoteHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Where actual or simulated instrument time is recorded, the required maneuvers (climbs/turns/straight and level flight/etc.) are assumed to have been performed..
        /// </summary>
        internal static string NoteIMCRequirements {
            get {
                return ResourceManager.GetString("NoteIMCRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [61.65(h), (i), and (j)](https://www.law.cornell.edu/cfr/text/14/61.65) allow simulators/FTDs/ATDs to contribute towards this as well.  %APP_NAME% treats any ATD as a BATD unless the text &quot;AATD&quot; is found in either the model name or in the flight&apos;s comments..
        /// </summary>
        internal static string NoteInstrumentTime {
            get {
                return ResourceManager.GetString("NoteInstrumentTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %APP_NAME% assumes that the flight is conducted under instrument rules if it contains simulated or actual IMC time.  %APP_NAME% does not validate that different kinds of approaches were performed, nor that they were performed at each airport, nor that the flight was along airways..
        /// </summary>
        internal static string NoteInstrumentXC {
            get {
                return ResourceManager.GetString("NoteInstrumentXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 15 hours of this must be in an aircraft certified as an LSA; %APP_NAME% does not know which aircraft are certified as an LSA, so cannot determine this for you.
        /// </summary>
        internal static string NoteLSATime {
            get {
                return ResourceManager.GetString("NoteLSATime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %APP_NAME% assumes that any dual instruction received on a flight that contains any actual or simulated IMC counts to is counted towards this.  Also, any certified simulator is credited towards the 5 hour allowance, which may be more than you are entitled to..
        /// </summary>
        internal static string NoteMinIFRTrainingUK {
            get {
                return ResourceManager.GetString("NoteMinIFRTrainingUK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See [FAR 61.110](https://www.law.cornell.edu/cfr/text/14/61.110) for possible exceptions that may apply to you.  Night landings are assumed to have involved flight in the traffic pattern..
        /// </summary>
        internal static string NoteNightRequirements {
            get {
                return ResourceManager.GetString("NoteNightRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nighttime cross-country is assumed to be the smaller of the night flight time and cross-country time recorded in a flight..
        /// </summary>
        internal static string NoteNightXC {
            get {
                return ResourceManager.GetString("NoteNightXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A flight MUST include the &quot;Solo Time&quot; to count towards this; logging PIC time is not sufficient..
        /// </summary>
        internal static string NoteSoloTime {
            get {
                return ResourceManager.GetString("NoteSoloTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %APP_NAME% is showing whether you are eligible to take the practical test TODAY; this progress can decay over time after your checkride..
        /// </summary>
        internal static string NoteTestPrep {
            get {
                return ResourceManager.GetString("NoteTestPrep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Landings at a towered airport are assumed to be full-stop if full-stop is required and if enough full-stop landings are recorded in the flight.
        /// </summary>
        internal static string NoteToweredAirport {
            get {
                return ResourceManager.GetString("NoteToweredAirport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Landings are assumed to have been at the listed airports..
        /// </summary>
        internal static string NoteXCLandings {
            get {
                return ResourceManager.GetString("NoteXCLandings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [61.65(g)](https://www.law.cornell.edu/cfr/text/14/61.65) allows fewer hours than this if you are applying for a combined private pilot/instrument rating certificate..
        /// </summary>
        internal static string NoteXCTime {
            get {
                return ResourceManager.GetString("NoteXCTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not yet completed..
        /// </summary>
        internal static string NotMet {
            get {
                return ResourceManager.GetString("NotMet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  %APP_NAME% cannot determine with 100% reliability that a given milestone has been met; some inference is often required.  In addition, various substitutions or credits may be applicable based on information beyond what %APP_NAME% can determine, so your personal requirements may differ from what is listed here.  Furthermore, note that many ratings require that the training hours required for that rating be done specifically in pursuit of that rating; e.g., training spent on a Private PIlot certificate may no [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OverallProgressDisclaimer {
            get {
                return ResourceManager.GetString("OverallProgressDisclaimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} of {1} milestones complete..
        /// </summary>
        internal static string OverallProgressTemplate {
            get {
                return ResourceManager.GetString("OverallProgressTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Progress Towards Ratings for {0}.
        /// </summary>
        internal static string PageTitle {
            get {
                return ResourceManager.GetString("PageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Progress here is only computing the flight experience requirements.  You are also required to have appropriate ratings; %APP_NAME% cannot validate the status of your ratings.
        /// </summary>
        internal static string Part135PICDisclaimer {
            get {
                return ResourceManager.GetString("Part135PICDisclaimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *100* hours of *night* flight time.
        /// </summary>
        internal static string Part135PICIFRNightTime {
            get {
                return ResourceManager.GetString("Part135PICIFRNightTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *75* hours of *actual or simulated instrument* time.
        /// </summary>
        internal static string Part135PICIFRTime {
            get {
                return ResourceManager.GetString("Part135PICIFRTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *50* hours of *actual or simulated instrument* time *in flight*.
        /// </summary>
        internal static string Part135PICIFRTimeInFlight {
            get {
                return ResourceManager.GetString("Part135PICIFRTimeInFlight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of total time as a pilot.
        /// </summary>
        internal static string Part135PICMinTime {
            get {
                return ResourceManager.GetString("Part135PICMinTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *25* hours of *night cross-country* time.
        /// </summary>
        internal static string Part135PICNightXCMinTime {
            get {
                return ResourceManager.GetString("Part135PICNightXCMinTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *cross-country* time.
        /// </summary>
        internal static string Part135PICXCMinTime {
            get {
                return ResourceManager.GetString("Part135PICXCMinTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cross-country time here uses the logged Cross-Country time for a flight or the Total Time, if the route has more than one airport, whichever is greater.
        /// </summary>
        internal static string Part135XCNote {
            get {
                return ResourceManager.GetString("Part135XCNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %APP_NAME% cannot determine if these takeoffs/landings were done at an airport with an operating control tower; please ensure that this is the case..
        /// </summary>
        internal static string Part141ControltowerWarning {
            get {
                return ResourceManager.GetString("Part141ControltowerWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3* hours of *training* in basic instrument maneuvers in *{0}*.
        /// </summary>
        internal static string Part141InstrumentTraining {
            get {
                return ResourceManager.GetString("Part141InstrumentTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least *20* hours of *dual instruction*.
        /// </summary>
        internal static string Part141MinInstruction {
            get {
                return ResourceManager.GetString("Part141MinInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least *{0:#,##0}* hours of flight *training* time.
        /// </summary>
        internal static string Part141MinTime {
            get {
                return ResourceManager.GetString("Part141MinTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ADDITIONAL NOTES: Part 141 for multi-engine aircraft requires &quot;performing the duties of a pilot in command while under the supervision of a certificated flight instructor&quot; rather than solo.  You can specify this for a flight by indicating Duties of PIC (&quot;DPIC&quot;) time and that the flight had an Instructor On Board (in additional properties). DPIC is distinct from dual received, so any dual time logged on such a flight that overlaps with DPIC time is not counted..
        /// </summary>
        internal static string Part141MultiEngineSoloDisclaimer {
            get {
                return ResourceManager.GetString("Part141MultiEngineSoloDisclaimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10 Night landings* (training) in *{0}*.
        /// </summary>
        internal static string Part141NightLandings {
            get {
                return ResourceManager.GetString("Part141NightLandings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10 Night takeoffs* (training) in *{0}*.
        /// </summary>
        internal static string Part141NightTakeoffs {
            get {
                return ResourceManager.GetString("Part141NightTakeoffs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3* hours of *night* flight in *{0}*.
        /// </summary>
        internal static string Part141NightTraining {
            get {
                return ResourceManager.GetString("Part141NightTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 *Night cross-country* flight in *{0}* of more than *{1}NM* distance.
        /// </summary>
        internal static string Part141NightXC {
            get {
                return ResourceManager.GetString("Part141NightXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *5* hours of *solo* flight time in *{0}*.
        /// </summary>
        internal static string Part141SoloFlight {
            get {
                return ResourceManager.GetString("Part141SoloFlight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3 solo* landings to a *full-stop* at an airport with an *operating control tower* in *{0}*.
        /// </summary>
        internal static string Part141SoloLandings {
            get {
                return ResourceManager.GetString("Part141SoloLandings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3 solo* takeoffs at an airport with an *operating control tower* in *{0}*.
        /// </summary>
        internal static string Part141SoloTakeoffs {
            get {
                return ResourceManager.GetString("Part141SoloTakeoffs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least *5* hours of *solo* flight training in {0}.
        /// </summary>
        internal static string Part141SoloTraining {
            get {
                return ResourceManager.GetString("Part141SoloTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One *solo 100NM cross-country* flight with one segment over *50NM* and *landings at 3 points* in *{0}*.
        /// </summary>
        internal static string Part141SoloXC {
            get {
                return ResourceManager.GetString("Part141SoloXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3* hours in prep for the practical test within *60 days* preceding the date of the test in *{0}*.
        /// </summary>
        internal static string Part141TestPrep {
            get {
                return ResourceManager.GetString("Part141TestPrep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3* hours of *cross-country* flight *training* in *{0}*.
        /// </summary>
        internal static string Part141XC {
            get {
                return ResourceManager.GetString("Part141XC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} found; {1:#,##0}% of goal.
        /// </summary>
        internal static string ProgressTemplate {
            get {
                return ResourceManager.GetString("ProgressTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Type of rating).
        /// </summary>
        internal static string PromptRatingGroup {
            get {
                return ResourceManager.GetString("PromptRatingGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Rating being sought).
        /// </summary>
        internal static string PromptRatingItem {
            get {
                return ResourceManager.GetString("PromptRatingItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to an airplane.
        /// </summary>
        internal static string ratingAirplane {
            get {
                return ResourceManager.GetString("ratingAirplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a multi-engine airplane.
        /// </summary>
        internal static string ratingAirplaneMulti {
            get {
                return ResourceManager.GetString("ratingAirplaneMulti", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a single engine airplane.
        /// </summary>
        internal static string ratingAirplaneSingle {
            get {
                return ResourceManager.GetString("ratingAirplaneSingle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to an airship.
        /// </summary>
        internal static string ratingAirship {
            get {
                return ResourceManager.GetString("ratingAirship", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a balloon.
        /// </summary>
        internal static string ratingBalloon {
            get {
                return ResourceManager.GetString("ratingBalloon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a gas balloon.
        /// </summary>
        internal static string ratingGasBalloon {
            get {
                return ResourceManager.GetString("ratingGasBalloon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a glider.
        /// </summary>
        internal static string ratingGlider {
            get {
                return ResourceManager.GetString("ratingGlider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Part 135 Ratings.
        /// </summary>
        internal static string RatingGroup135 {
            get {
                return ResourceManager.GetString("RatingGroup135", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ATP Ratings.
        /// </summary>
        internal static string RatingGroupATP {
            get {
                return ResourceManager.GetString("RatingGroupATP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CFI Ratings.
        /// </summary>
        internal static string RatingGroupCFI {
            get {
                return ResourceManager.GetString("RatingGroupCFI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commercial Ratings.
        /// </summary>
        internal static string RatingGroupCommercial {
            get {
                return ResourceManager.GetString("RatingGroupCommercial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Designated Pilot Examiner (DPE) Ratings.
        /// </summary>
        internal static string RatingGroupDPE {
            get {
                return ResourceManager.GetString("RatingGroupDPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instrument Ratings.
        /// </summary>
        internal static string RatingGroupInstrument {
            get {
                return ResourceManager.GetString("RatingGroupInstrument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EASA LAPL Ratings.
        /// </summary>
        internal static string RatingGroupLAPL {
            get {
                return ResourceManager.GetString("RatingGroupLAPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private Pilot Ratings.
        /// </summary>
        internal static string RatingGroupPrivatePilot {
            get {
                return ResourceManager.GetString("RatingGroupPrivatePilot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recreational Pilot Ratings.
        /// </summary>
        internal static string RatingGroupRecreational {
            get {
                return ResourceManager.GetString("RatingGroupRecreational", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sport Pilot Ratings.
        /// </summary>
        internal static string RatingGroupSportPilot {
            get {
                return ResourceManager.GetString("RatingGroupSportPilot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Please Select).
        /// </summary>
        internal static string RatingGroupUnknown {
            get {
                return ResourceManager.GetString("RatingGroupUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a gyroplane.
        /// </summary>
        internal static string ratingGyroplane {
            get {
                return ResourceManager.GetString("ratingGyroplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a helicopter.
        /// </summary>
        internal static string ratingHelicopter {
            get {
                return ResourceManager.GetString("ratingHelicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a hot air balloon.
        /// </summary>
        internal static string ratingHotAirBalloon {
            get {
                return ResourceManager.GetString("ratingHotAirBalloon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a powered-lift aircraft.
        /// </summary>
        internal static string ratingPoweredLift {
            get {
                return ResourceManager.GetString("ratingPoweredLift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a powered parachute.
        /// </summary>
        internal static string ratingPoweredParachute {
            get {
                return ResourceManager.GetString("ratingPoweredParachute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Progress towards {0} for {1}, as of {2}.
        /// </summary>
        internal static string RatingProgressPrintHeaderTemplate {
            get {
                return ResourceManager.GetString("RatingProgressPrintHeaderTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Please Select).
        /// </summary>
        internal static string RatingUnknown {
            get {
                return ResourceManager.GetString("RatingUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a weight-shift-control aircraft.
        /// </summary>
        internal static string ratingWeightShift {
            get {
                return ResourceManager.GetString("ratingWeightShift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3* hours of *solo* flying in the aircraft *in the category/class* for the rating being sought..
        /// </summary>
        internal static string RecreationalMinSolo {
            get {
                return ResourceManager.GetString("RecreationalMinSolo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *30* hours of flight time.
        /// </summary>
        internal static string RecreationalMinTime {
            get {
                return ResourceManager.GetString("RecreationalMinTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *15* hours of flight *training*.
        /// </summary>
        internal static string RecreationalMinTraining {
            get {
                return ResourceManager.GetString("RecreationalMinTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *2* hours of *training* en-route to an airport at least *25NM* away, including at least *3 take-offs and landings* at the 2nd airport..
        /// </summary>
        internal static string RecreationalMinXC {
            get {
                return ResourceManager.GetString("RecreationalMinXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only landings are counted here; takeoffs are assumed, and one landing at the home airport is assumed, so 4 landings must be found.  If 4 or more landings are found, it is assumed that at least 3 of these were at the far airport..
        /// </summary>
        internal static string RecreationalMinXCNote {
            get {
                return ResourceManager.GetString("RecreationalMinXCNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *3* hours of flight *training* within *2* calendar months prior to test..
        /// </summary>
        internal static string RecreationTestPrep {
            get {
                return ResourceManager.GetString("RecreationTestPrep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0}* hours of *dual instruction* in *{1}*.
        /// </summary>
        internal static string SADual {
            get {
                return ResourceManager.GetString("SADual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A *dual night cross-country* flight of at least *{0}NM* with *2* landings (full-stop if in an aeroplane) away from base.
        /// </summary>
        internal static string SADualXC {
            get {
                return ResourceManager.GetString("SADualXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10* hours of *instrument instruction*.
        /// </summary>
        internal static string SANightInstrument {
            get {
                return ResourceManager.GetString("SANightInstrument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Up to 5 hours of this may be done in an approved FSTD, or may be credited if you have an instrument rating in another category.
        /// </summary>
        internal static string SANightInstrumentNote {
            get {
                return ResourceManager.GetString("SANightInstrumentNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *5* night dual landings.
        /// </summary>
        internal static string SANightLandings {
            get {
                return ResourceManager.GetString("SANightLandings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *5* night dual takeoffs.
        /// </summary>
        internal static string SANightTakeoffs {
            get {
                return ResourceManager.GetString("SANightTakeoffs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0}* hours of *solo* time.
        /// </summary>
        internal static string SASolo {
            get {
                return ResourceManager.GetString("SASolo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A *solo cross-country* flight of at least *{0}NM*, including *full-stop* landings at *2* aerodromes.  For aeroplanes, a leg of at least 50NM from base is also required.
        /// </summary>
        internal static string SASoloLongXC {
            get {
                return ResourceManager.GetString("SASoloLongXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0}* hours of *solo cross-country* time.
        /// </summary>
        internal static string SASoloXC {
            get {
                return ResourceManager.GetString("SASoloXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0}* hours of total time in *{1}*.
        /// </summary>
        internal static string SATotalTime {
            get {
                return ResourceManager.GetString("SATotalTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to single engine airplane.
        /// </summary>
        internal static string SportAirplaneCategory {
            get {
                return ResourceManager.GetString("SportAirplaneCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to glider.
        /// </summary>
        internal static string SportGliderCategory {
            get {
                return ResourceManager.GetString("SportGliderCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to gyroplane.
        /// </summary>
        internal static string SportGyroplaneCategory {
            get {
                return ResourceManager.GetString("SportGyroplaneCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10* training flights in a *glider* (5 if you already have 20 hours in heavier-than-air aircraft).
        /// </summary>
        internal static string SportMinFlightsGlider {
            get {
                return ResourceManager.GetString("SportMinFlightsGlider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of flight *training* in a *{1}*.
        /// </summary>
        internal static string SportMinInstruction {
            get {
                return ResourceManager.GetString("SportMinInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10* takeoffs &amp; landings in a *{0}*.  (Landings must be full-stop for airplane rating).
        /// </summary>
        internal static string SportMinLandings {
            get {
                return ResourceManager.GetString("SportMinLandings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each solo flight with a landing is assumed to have a corresponding solo launch.  Think about it..
        /// </summary>
        internal static string SportMinLandingsNote {
            get {
                return ResourceManager.GetString("SportMinLandingsNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of *solo* time in a *{1}*.
        /// </summary>
        internal static string SportMinSolo {
            get {
                return ResourceManager.GetString("SportMinSolo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *2* hours of *solo* flight in a *glider* (1 if you already have 20 hours in heavier-than-air aircraft).
        /// </summary>
        internal static string SportMinSoloGlider {
            get {
                return ResourceManager.GetString("SportMinSoloGlider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *5 solo launches/landings* (3 if you already have 20 hours in heavier-than-air aircraft).
        /// </summary>
        internal static string SportMinSoloLandings {
            get {
                return ResourceManager.GetString("SportMinSoloLandings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0:#,##0}* hours of flight time.
        /// </summary>
        internal static string SportMinTime {
            get {
                return ResourceManager.GetString("SportMinTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *10* hours of flight time in a *glider* (3 if you already have 20 hours in heavier-than-air aircraft).
        /// </summary>
        internal static string SportMinTimeGlider {
            get {
                return ResourceManager.GetString("SportMinTimeGlider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least *3 training flights* within the *2* calendar months prior to the test.
        /// </summary>
        internal static string SportMinTraining {
            get {
                return ResourceManager.GetString("SportMinTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *2* hours of *cross-country training* in a *{0}*.
        /// </summary>
        internal static string SportMinXC {
            get {
                return ResourceManager.GetString("SportMinXC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For simplicity, this is assuming one takeoff per landing and a flight in the pattern..
        /// </summary>
        internal static string SportPilotLandingNote {
            get {
                return ResourceManager.GetString("SportPilotLandingNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *Solo cross-country* flight in a *{0}* of at least *{1}NM* that includes *2 full-stop landings* and a straight line distance over *25NM*.
        /// </summary>
        internal static string SportSoloXCFlight {
            get {
                return ResourceManager.GetString("SportSoloXCFlight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *2* hours of flight *training* within the *2* calendar months prior to the test.
        /// </summary>
        internal static string SportTestPrepTime {
            get {
                return ResourceManager.GetString("SportTestPrepTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 135.243 PIC (VFR).
        /// </summary>
        internal static string Title135243PIC {
            get {
                return ResourceManager.GetString("Title135243PIC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 135.243 PIC (IFR).
        /// </summary>
        internal static string Title135243PICIFR {
            get {
                return ResourceManager.GetString("Title135243PICIFR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Part 141 - Commercial, Rotorcraft-Helicopter.
        /// </summary>
        internal static string Title141CommercialHelicopter {
            get {
                return ResourceManager.GetString("Title141CommercialHelicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Part 141 - Commercial, Airplane, Multi Engine Land.
        /// </summary>
        internal static string Title141CommercialMultiEngineLand {
            get {
                return ResourceManager.GetString("Title141CommercialMultiEngineLand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Part 141 - Commercial, Airplane, Multi Engine Sea.
        /// </summary>
        internal static string Title141CommercialMultiEngineSea {
            get {
                return ResourceManager.GetString("Title141CommercialMultiEngineSea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Part 141 - Commercial, Airplane, Single Engine Land.
        /// </summary>
        internal static string Title141CommercialSingleEngineLand {
            get {
                return ResourceManager.GetString("Title141CommercialSingleEngineLand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Part 141 - Commercial, Airplane, Single Engine Sea.
        /// </summary>
        internal static string Title141CommercialSingleEngineSea {
            get {
                return ResourceManager.GetString("Title141CommercialSingleEngineSea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Part 141 - Instrument Airplane.
        /// </summary>
        internal static string Title141IFRAirplane {
            get {
                return ResourceManager.GetString("Title141IFRAirplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Part 141 - Instrument Helicopter.
        /// </summary>
        internal static string Title141IFRHelicopter {
            get {
                return ResourceManager.GetString("Title141IFRHelicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Part 141 - Private Pilot, Gyroplane.
        /// </summary>
        internal static string Title141PPLGyroplane {
            get {
                return ResourceManager.GetString("Title141PPLGyroplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Part 141 - Private Pilot, Helicopter.
        /// </summary>
        internal static string Title141PPLHelicopter {
            get {
                return ResourceManager.GetString("Title141PPLHelicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Part 141 - Private Pilot, Multi-Engine Airplane.
        /// </summary>
        internal static string Title141PPLMEL {
            get {
                return ResourceManager.GetString("Title141PPLMEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Part 141 - Private Pilot, Single-Engine Airplane.
        /// </summary>
        internal static string Title141PPLSEL {
            get {
                return ResourceManager.GetString("Title141PPLSEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Canada - Aeroplane.
        /// </summary>
        internal static string Title42130Aeroplane {
            get {
                return ResourceManager.GetString("Title42130Aeroplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Canada - Aeroplane.
        /// </summary>
        internal static string Title42146Airplane {
            get {
                return ResourceManager.GetString("Title42146Airplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Canada - Helicopter.
        /// </summary>
        internal static string Title42146Helicopter {
            get {
                return ResourceManager.GetString("Title42146Helicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.109(a) - Airplane, Single-Engine.
        /// </summary>
        internal static string Title61109A {
            get {
                return ResourceManager.GetString("Title61109A", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.109(b) - Airplane, Multi-Engine.
        /// </summary>
        internal static string Title61109B {
            get {
                return ResourceManager.GetString("Title61109B", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.109(c) - Helicopter.
        /// </summary>
        internal static string Title61109C {
            get {
                return ResourceManager.GetString("Title61109C", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.109(d) - Gyroplane.
        /// </summary>
        internal static string Title61109D {
            get {
                return ResourceManager.GetString("Title61109D", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.109(e) - Powered Lift.
        /// </summary>
        internal static string Title61109E {
            get {
                return ResourceManager.GetString("Title61109E", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.109(f) - Glider.
        /// </summary>
        internal static string Title61109F {
            get {
                return ResourceManager.GetString("Title61109F", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.109(g) - Airship.
        /// </summary>
        internal static string Title61109G {
            get {
                return ResourceManager.GetString("Title61109G", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.109(h) - Balloon.
        /// </summary>
        internal static string Title61109H {
            get {
                return ResourceManager.GetString("Title61109H", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  (Gas Balloon).
        /// </summary>
        internal static string Title61109H1Suffix {
            get {
                return ResourceManager.GetString("Title61109H1Suffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  (Hot Air Balloon).
        /// </summary>
        internal static string Title61109H2Suffix {
            get {
                return ResourceManager.GetString("Title61109H2Suffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.109(i) - Powered Parachute.
        /// </summary>
        internal static string Title61109I {
            get {
                return ResourceManager.GetString("Title61109I", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.109(j) - Weight-Shift.
        /// </summary>
        internal static string Title61109J {
            get {
                return ResourceManager.GetString("Title61109J", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.129(a) - Airplane, Single-Engine Land.
        /// </summary>
        internal static string Title61129A {
            get {
                return ResourceManager.GetString("Title61129A", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.129(a) - Airplane, Single-Engine Sea.
        /// </summary>
        internal static string Title61129ASEA {
            get {
                return ResourceManager.GetString("Title61129ASEA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.129(b) - Airplane, Multi-Engine Land.
        /// </summary>
        internal static string Title61129B {
            get {
                return ResourceManager.GetString("Title61129B", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.129(b) - Airplane, Multi-Engine Sea.
        /// </summary>
        internal static string Title61129BSEA {
            get {
                return ResourceManager.GetString("Title61129BSEA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.129(c) - Helicopter.
        /// </summary>
        internal static string Title61129C {
            get {
                return ResourceManager.GetString("Title61129C", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.129(d) - Gyroplane.
        /// </summary>
        internal static string Title61129DGyroplane {
            get {
                return ResourceManager.GetString("Title61129DGyroplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.129(f) - Glider.
        /// </summary>
        internal static string Title61129F {
            get {
                return ResourceManager.GetString("Title61129F", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.129(h) - Gas Balloon.
        /// </summary>
        internal static string Title61129HGasBalloon {
            get {
                return ResourceManager.GetString("Title61129HGasBalloon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.129(h) - Hot Air Balloon.
        /// </summary>
        internal static string Title61129HHotAirBalloon {
            get {
                return ResourceManager.GetString("Title61129HHotAirBalloon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.159 - Airplane - Multi-Engine Land.
        /// </summary>
        internal static string Title61159AMEL {
            get {
                return ResourceManager.GetString("Title61159AMEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.159 - Airplane - Multi-Engine Sea.
        /// </summary>
        internal static string Title61159AMES {
            get {
                return ResourceManager.GetString("Title61159AMES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.159 - Airplane - Single-Engine Land.
        /// </summary>
        internal static string Title61159ASEL {
            get {
                return ResourceManager.GetString("Title61159ASEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.159 - Airplane - Single-Engine Sea.
        /// </summary>
        internal static string Title61159ASES {
            get {
                return ResourceManager.GetString("Title61159ASES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.160(c) - Airplane - Multi-Engine, Restricted (Associates Degree).
        /// </summary>
        internal static string Title61160AssociatesDegree {
            get {
                return ResourceManager.GetString("Title61160AssociatesDegree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.160(b) - Airplane - Multi-Engine, Restricted (Bachelors Degree).
        /// </summary>
        internal static string Title61160BachelorsDegree {
            get {
                return ResourceManager.GetString("Title61160BachelorsDegree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.160(f) - Airplane - Multi-Engine-Land, Restricted.
        /// </summary>
        internal static string Title61160FAMEL {
            get {
                return ResourceManager.GetString("Title61160FAMEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.160(f) - Airplane - Multi-Engine-Sea, Restricted.
        /// </summary>
        internal static string Title61160FAMES {
            get {
                return ResourceManager.GetString("Title61160FAMES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.160(f) - Airplane - Single-Engine-Land, Restricted.
        /// </summary>
        internal static string Title61160FASEL {
            get {
                return ResourceManager.GetString("Title61160FASEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.160(f) - Airplane - Single-Engine-Sea, Restricted.
        /// </summary>
        internal static string Title61160FASES {
            get {
                return ResourceManager.GetString("Title61160FASES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.160(a) - Airplane - Multi-Engine, Restricted (Former Military).
        /// </summary>
        internal static string Title61160FormerMilitary {
            get {
                return ResourceManager.GetString("Title61160FormerMilitary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.160(d) - Airplane - Multi-Engine, Restricted (30-60 credit hours).
        /// </summary>
        internal static string Title61160PartialDegree {
            get {
                return ResourceManager.GetString("Title61160PartialDegree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.161 - Helicopter.
        /// </summary>
        internal static string Title61161 {
            get {
                return ResourceManager.GetString("Title61161", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.163 - Powered Lift.
        /// </summary>
        internal static string Title61163 {
            get {
                return ResourceManager.GetString("Title61163", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CFI - Airplane, Multi-Engine Land.
        /// </summary>
        internal static string Title61183AMEL {
            get {
                return ResourceManager.GetString("Title61183AMEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CFI - Airplane, Multi-Engine Sea.
        /// </summary>
        internal static string Title61183AMES {
            get {
                return ResourceManager.GetString("Title61183AMES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CFI - Airplane, Single-Engine Land.
        /// </summary>
        internal static string Title61183ASEL {
            get {
                return ResourceManager.GetString("Title61183ASEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CFI - Airplane, Single-Engine Sea.
        /// </summary>
        internal static string Title61183ASES {
            get {
                return ResourceManager.GetString("Title61183ASES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CFI - Glider.
        /// </summary>
        internal static string Title61183Glider {
            get {
                return ResourceManager.GetString("Title61183Glider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CFI - Helicopter.
        /// </summary>
        internal static string Title61183Helicopter {
            get {
                return ResourceManager.GetString("Title61183Helicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CFI-Sport - Airplane, Single-Engine Land.
        /// </summary>
        internal static string Title61411CFISportSEL {
            get {
                return ResourceManager.GetString("Title61411CFISportSEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.65(d) - Airplane.
        /// </summary>
        internal static string Title6165D {
            get {
                return ResourceManager.GetString("Title6165D", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.65(d) - Airplane (Part 142 Training).
        /// </summary>
        internal static string Title6165DPart142 {
            get {
                return ResourceManager.GetString("Title6165DPart142", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.65(e) - Helicopter.
        /// </summary>
        internal static string Title6165E {
            get {
                return ResourceManager.GetString("Title6165E", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.65(e) - Helicopter (Part 142 Training).
        /// </summary>
        internal static string Title6165EPart142 {
            get {
                return ResourceManager.GetString("Title6165EPart142", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.65(f) - Powered Lift.
        /// </summary>
        internal static string Title6165F {
            get {
                return ResourceManager.GetString("Title6165F", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.65(f) - Powered Lift (Part 142 Training).
        /// </summary>
        internal static string Title6165FPart142 {
            get {
                return ResourceManager.GetString("Title6165FPart142", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.99 .
        /// </summary>
        internal static string Title6199 {
            get {
                return ResourceManager.GetString("Title6199", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Canada - ATP, Airplane.
        /// </summary>
        internal static string TitleCAATPAirplane {
            get {
                return ResourceManager.GetString("TitleCAATPAirplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Canada - ATP, Helicopter.
        /// </summary>
        internal static string TitleCAATPHelicopter {
            get {
                return ResourceManager.GetString("TitleCAATPHelicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Canada - Night Airplane.
        /// </summary>
        internal static string TitleCANightAirplane {
            get {
                return ResourceManager.GetString("TitleCANightAirplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Canada - Night Helicopter.
        /// </summary>
        internal static string TitleCANightHelicopter {
            get {
                return ResourceManager.GetString("TitleCANightHelicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Canada - Private Pilot, Airplane (Land).
        /// </summary>
        internal static string TitleCAPPLAirplaneLand {
            get {
                return ResourceManager.GetString("TitleCAPPLAirplaneLand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Canada - Private Pilot, Airplane (Sea).
        /// </summary>
        internal static string TitleCAPPLAirplaneSea {
            get {
                return ResourceManager.GetString("TitleCAPPLAirplaneSea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Canada - Private Pilot, Helicopter.
        /// </summary>
        internal static string TitleCAPPLHelicopter {
            get {
                return ResourceManager.GetString("TitleCAPPLHelicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CASR - Commercial Pilot, Aeroplane, Integrated Training NOT Completed.
        /// </summary>
        internal static string TitleCASRCommAirplaneNoTraining {
            get {
                return ResourceManager.GetString("TitleCASRCommAirplaneNoTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CASR - Commercial Pilot, Aeroplane, Integrated Training Completed.
        /// </summary>
        internal static string TitleCASRCommAirplaneTraining {
            get {
                return ResourceManager.GetString("TitleCASRCommAirplaneTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CASR - Commercial Pilot, Helicopter Integrated Training NOT Completed.
        /// </summary>
        internal static string TitleCASRCommHeliNoTraining {
            get {
                return ResourceManager.GetString("TitleCASRCommHeliNoTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CASR - Commercial Pilot, Helicopter Integrated Training Completed.
        /// </summary>
        internal static string TitleCASRCommHeliTraining {
            get {
                return ResourceManager.GetString("TitleCASRCommHeliTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CASR - Private Pilot, Aeroplane, Integrated Training NOT Completed.
        /// </summary>
        internal static string TitleCASRPPLAirplaneNoTraining {
            get {
                return ResourceManager.GetString("TitleCASRPPLAirplaneNoTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CASR - Private Pilot, Aeroplane, Integrated Training Completed.
        /// </summary>
        internal static string TitleCASRPPLAirplaneTraining {
            get {
                return ResourceManager.GetString("TitleCASRPPLAirplaneTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CASR - Private Pilot, Helicopter, Integrated Training NOT Completed.
        /// </summary>
        internal static string TitleCASRPPLHeliNoTraining {
            get {
                return ResourceManager.GetString("TitleCASRPPLHeliNoTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CASR - Private Pilot, Helicopter, Integrated Training Completed.
        /// </summary>
        internal static string TitleCASRPPLHeliTraining {
            get {
                return ResourceManager.GetString("TitleCASRPPLHeliTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commercial, Airplane - Multi-Engine Land.
        /// </summary>
        internal static string TitleDPECommAMEL {
            get {
                return ResourceManager.GetString("TitleDPECommAMEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commercial, Airplane - Multi-Engine Sea.
        /// </summary>
        internal static string TitleDPECommAMES {
            get {
                return ResourceManager.GetString("TitleDPECommAMES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commercial, Airplane - Single-Engine Land.
        /// </summary>
        internal static string TitleDPECommASEL {
            get {
                return ResourceManager.GetString("TitleDPECommASEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commercial, Airplane - Single-Engine Sea.
        /// </summary>
        internal static string TitleDPECommASES {
            get {
                return ResourceManager.GetString("TitleDPECommASES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commercial, Glider.
        /// </summary>
        internal static string TitleDPECommGlider {
            get {
                return ResourceManager.GetString("TitleDPECommGlider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commercial, RotorCraft Helicopter.
        /// </summary>
        internal static string TitleDPECommHelicopter {
            get {
                return ResourceManager.GetString("TitleDPECommHelicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private Pilot, Airplane - Multi-Engine Land.
        /// </summary>
        internal static string TitleDPEPPLAMEL {
            get {
                return ResourceManager.GetString("TitleDPEPPLAMEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private Pilot, Airplane - Multi-Engine Sea.
        /// </summary>
        internal static string TitleDPEPPLAMES {
            get {
                return ResourceManager.GetString("TitleDPEPPLAMES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private Pilot, Airplane - Single-Engine Land.
        /// </summary>
        internal static string TitleDPEPPLASEL {
            get {
                return ResourceManager.GetString("TitleDPEPPLASEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private Pilot, Airplane - Single-Engine Sea.
        /// </summary>
        internal static string TitleDPEPPLASES {
            get {
                return ResourceManager.GetString("TitleDPEPPLASES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private Pilot, Glider.
        /// </summary>
        internal static string TitleDPEPPLGlider {
            get {
                return ResourceManager.GetString("TitleDPEPPLGlider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private Pilot, Rotorcraft - Gyroplane.
        /// </summary>
        internal static string TitleDPEPPLGyroplane {
            get {
                return ResourceManager.GetString("TitleDPEPPLGyroplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private Pilot, Rotorcraft - Helicopter.
        /// </summary>
        internal static string TitleDPEPPLHelicopter {
            get {
                return ResourceManager.GetString("TitleDPEPPLHelicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EASA - PPL(A): Aeroplane Private Pilot.
        /// </summary>
        internal static string TitleEASAAirplanePPL {
            get {
                return ResourceManager.GetString("TitleEASAAirplanePPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EASA IR (Airplane).
        /// </summary>
        internal static string TitleEASAFCLIRAirplane {
            get {
                return ResourceManager.GetString("TitleEASAFCLIRAirplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EASA - PPL(H): Helicopter Private Pilot.
        /// </summary>
        internal static string TitleEASAHelicopterPPL {
            get {
                return ResourceManager.GetString("TitleEASAHelicopterPPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EASA - LAPL(A) - Light Aircraft Pilot License, Airplane.
        /// </summary>
        internal static string TitleEASALAPLAirplane {
            get {
                return ResourceManager.GetString("TitleEASALAPLAirplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EASA - LAPL(H) - Light Aircraft Pilot License, Helicopter.
        /// </summary>
        internal static string TitleEASALAPLHelicopter {
            get {
                return ResourceManager.GetString("TitleEASALAPLHelicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EASA - PPL: Night (Aeroplane).
        /// </summary>
        internal static string TitleEASAPPLNightAirplane {
            get {
                return ResourceManager.GetString("TitleEASAPPLNightAirplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to South Africa - Night Aeroplane.
        /// </summary>
        internal static string TitleSANightAeroplane {
            get {
                return ResourceManager.GetString("TitleSANightAeroplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to South Africa - Night Helicopter.
        /// </summary>
        internal static string TitleSANightHelicopter {
            get {
                return ResourceManager.GetString("TitleSANightHelicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to South Africa - PPL(A): Aeroplane Private Pilot.
        /// </summary>
        internal static string TitleSAPPLAirplane {
            get {
                return ResourceManager.GetString("TitleSAPPLAirplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to South Africa - PPL(H): Helicopter Private Pilot.
        /// </summary>
        internal static string TitleSAPPLHelicopter {
            get {
                return ResourceManager.GetString("TitleSAPPLHelicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.313(b &amp; c) - Sport Pilot, Glider.
        /// </summary>
        internal static string TitleSportGlider {
            get {
                return ResourceManager.GetString("TitleSportGlider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.313(d) - Sport Pilot, Gyroplane.
        /// </summary>
        internal static string TitleSportGyroplane {
            get {
                return ResourceManager.GetString("TitleSportGyroplane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.313(a) - Sport Pilot, Airplane Single Engine Land.
        /// </summary>
        internal static string TitleSportSingleEngineLand {
            get {
                return ResourceManager.GetString("TitleSportSingleEngineLand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.313(a) - Sport Pilot, Airplane Single Engine Sea.
        /// </summary>
        internal static string TitleSportSingleEngineSea {
            get {
                return ResourceManager.GetString("TitleSportSingleEngineSea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.313(h) - Sport Pilot, Weight-shift Control Land.
        /// </summary>
        internal static string TitleSportWeightShiftControlLand {
            get {
                return ResourceManager.GetString("TitleSportWeightShiftControlLand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAR 61.313(h) - Sport Pilot, Weight-shift Control Sea.
        /// </summary>
        internal static string TitleSportWeightShiftControlSea {
            get {
                return ResourceManager.GetString("TitleSportWeightShiftControlSea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UK IR(R) - Restricted Instrument.
        /// </summary>
        internal static string TitleUKIRRestricted {
            get {
                return ResourceManager.GetString("TitleUKIRRestricted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Progress Towards Ratings.
        /// </summary>
        internal static string ViewStudentProgress {
            get {
                return ResourceManager.GetString("ViewStudentProgress", resourceCulture);
            }
        }
    }
}
