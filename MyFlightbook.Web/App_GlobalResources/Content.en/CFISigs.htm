<p>
    A method is needed by which an instructor can sign a student&#8216;s logbook, or by which an instructor can endorse a student. Reference is made to <a href="https://www.faa.gov/regulations_policies/advisory_circulars/index.cfm/go/document.information/documentID/1043396" target="_blank">FAA circular AC No: 120-78B</a>,
    which outlines the criteria to be used to ensure that such a signature is acceptable to the FAA. Note that AC-120-78B explicitly declares that it is not binding; it describes *an* acceptible means of compliance (and not the only one).
</p>
<p>This document describes the implementation used by %APP_NAME%. It has NOT been vetted by the FAA (indeed, the FAA does not appear to certify compliance); it is a description of how I have chosen to implement my interpretation of the requirements.</p>
<h1>2 Definitions</h1>
<p>
    <b>CFI (&quot;Certified Flight Instructor&quot;)</b> The person signing a flight entry or issuing an endorsement, aka the <b>signer</b>. Note that there are additional signers that are possible besides CFIs. For example, holders of ATP certificates
    and ground instructors can also sign logbooks or issue endorsements under certain circumstances. For simplicity, this document uses the term &quot;CFI&quot; but it should be interpreted to encompass any of these signing scenarios.
</p>
<p><b>Student</b> The pilot wishing to have an entry signed. As with the signer above, &quot;student&quot; here is meant to encompass any pilot who is receiving an endorsement or a signed flight; e.g., it can include second-in-command pilots under part 135 having their flight entry signed by the PIC.</p>
<p><b>Signed Flight</b> A flight entry in a student&#39;s logbook which includes CFI comments and a CFI attestation that the training described has taken place during that flight.&nbsp; I.e., this is what the CFI fills out in a paper logbook at the end of the flight.</p>
<p><b>Endorsement</b> An indication by a CFI that the student has met some required level of accomplishment, fulfilled a periodic requirement, or is otherwise authorized to perform various flying activities.&nbsp; I.e., this is not tied to a particular flight, but rather are the items typically found at the back of a paper logbook, such as a tailwheel endorsement, student-pilot solo authorization, readiness for a test etc.</p>
<p><b>Ad-Hoc </b>= A signature provided when the student and the instructor do not have accounts on %APP_NAME% that are linked in a student/instructor relationship. The signing of a flight is a one-off event, and it is not necessary for the instructor to ever even have an account on %APP_NAME%.</p>
<p><b>Authenticated</b> A signature where the student and the instructor each have an account on %APP_NAME%, and where their accounts are linked in a student/instructor relationship, and where both must authenticate themselves to the system.</p>
<p><b>Mobile </b>= A signature that is provided face-to-face on the student&#8216;s mobile device; e.g., as might happen in the hangar immediately following a flight. Note that it is on the student&#8216;s device because it is the student&#8216;s logbook that is being signed.</p>
<p><b>Remote</b> A signature that is provided asynchronously via the web. It does not require that the student and CFI be together, nor the presence of a mobile device. This is ALWAYS authenticated.</p>
<p><b>Hash</b> A deterministic unique output of an operation performed on an object which changes if the underlying object changes. In most applications of a hash, the hash is small relative to the size of the object being hashed, but is highly sensitive to changes in the underlying object. The key attribute of a hash is that you can compare the hash of an original object and the hash of the new object, and if the new object differs even slightly from the old, the hashes will be different with an exceedingly high probability (or, stated another way, the odds of the underlying objects being different but the hashes being the same is vanishingly small), and hashes are much quicker to compare than entire objects.</p>
<p><b>Encryption</b> The transformation of data into an encoded form that obscures the underlying data. Encrypted data requires a key to decrypt.  Encryption can help detect and prevent tampering.</p>
<p>
    <b>Public/Private Key Encryption</b> An encryption system that uses key pairs. Data that is encrypted with one key can only be decrypted with the other (and vice-versa). One key of the pair is secretly held by a single entity and is referred to as the &quot;private key.&quot;,
    while its mate is widely and publicly known and is referred to as a &quot;public key.&quot;
</p>
<p>If the owner of the private key encrypts data that can be successfully decrypted with the corresponding public key, than one can consider the data to truly have been encrypted by the holder of the private key, thus providing a means of proving their identity.</p>
<p>The FAA refers to systems that use public/private key encryptions as &quot;PKI&quot; for &quot;public key infrastructure.&quot;</p>
<p>It is important to note that PKI really only has value over a simple single-key encryption scheme (which uses the same secret key to encrypt and decrypt) when communicating between two parties.</p>
<p><b>Electronic Signature</b> Proof that the specified signer (CFI, ground instructor, etc.) has signed the specified object, and that the object has not been modified since that time. This has the same meaning as in AC-120-78B 1.8.9, and, more specifically, 1.8.5 (&quot;Digital Electronic Signature&quot;).</p>
<p><b>Digitized Signature </b> An image of a handwritten signature. Not to be confused with an Electronic Signature; this maps to AC-120-78B&#8216;s 1.8.14.</p>
<p><b>Expiration Date</b> a CFI certificate expiration, if it has one, otherwise the "recent experience expiration" date. See <a target="_blank" href="https://www.faa.gov/documentlibrary/media/advisory_circular/ac_61-65J.pdf">AC 61-65J</a></p>
<h1>3 Signed Flights</h1>
<p>A signed flight is an attestation by a CFI (or other signer) that they gave instruction to another individual on a given day (or, in the case of AC-135-43, that the recipient served as an SIC).</p>
<h2>3.1 User Flow</h2>
<p>There are 4 basic scenarios to support. In descending order of importance, these are:</p>
<ol>
    <li><b>Student Initiated - Mobile Device, Ad-Hoc:</b>   In this scenario, the student has an account on %APP_NAME% and the instructor may or may not have one, but we bypass the establishment of an account/relationship in order to quickly perform an on-the-spot signing. This is called &quot;Ad-hoc&quot; because no relationship is established. This might be a typical scenario after a check-out flight at an FBO. Because we cannot authenticate the CFI in any other way, but the student has a mobile device, a digitized handwritten signature is captured. This is the only scenario we allow where a digitized handwritten signature is used, because it is the only one where we can assume that the CFI has physical access to the mobile device that is signed in to the student&#8216;s account. </li>
    <li><b>Student Initiated - Mobile Device, Authenticated</b>: In this scenario, the CFI has both a %APP_NAME% account AND the student and CFI have established a student/CFI relationship. This might be a typical scenario for right after an instruction flight during primary training. Because the instructor is known to %APP_NAME%, a digitized handwritten signature is not necessary. However, the CFI must still authenticate themselves to the device by providing their password.</li>
    <li><b>Student Initiated - Remote, Authenticated. </b>Again, the CFI and Student are both on %APP_NAME% and have a relationship, but this addresses the scenario where they are not together but a signature is required. For example, if they took a training flight and then went home and then the student realizes that the CFI forgot to sign the logbook. The Student sends a request by email to the CFI to sign the entry; the CFI then authenticates to %APP_NAME% and signs the record. This can also be used to &quot;fix&quot; a signature that is invalidated by an edit to the underlying flight, but for which the CFI agrees that the edit was OK.</li>
    <li><b>CFI Initiated - Remote, Authenticated.</b>The CFI and Student are both on %APP_NAME% and have a relationship, and the student has given the CFI permission to view their logbook. In viewing the logbook, the CFI may choose to sign entries that do not already have valid signatures, or to re-sign ones that have been broken (as above).<b></b></li>
</ol>
<p>These scenarios are discussed in more detail below</p>
<h3>3.1.1 Student Initiated - Mobile Device, Ad-Hoc</h3>
<ol>
    <li>Student OR Instructor fills out and submits flight.</li>
    <li>View flight on mobile device.</li>
    <li>Tap link to sign flight.</li>
    <li>Student positively affirms that the signature that will be captured belongs to the CFI that claims to be signing.</li>
    <li>Flight is displayed for verification, and fields are present for CFI to provide their identifying information, including CFI Certificate, expiration date (if required), Email, name, and comments.</li>
    <li>CFI signs with a fingertip/stylus. </li>
    <li>Digitized signature is submitted as part of the signature. The CFIUsername data field is blank, but the DigitizedSignature field is populated with the digitized signature.</li>
</ol>
<p>In the current implementation, this is done via web page served (securely) from the %APP_NAME% server, and requires authentication from the STUDENT&#8216;s account.</p>
<p>The digitized signature is stored as a <a href="https://en.wikipedia.org/wiki/Portable_Network_Graphics" target="_blank">PNG</a> file with the flight record.</p>
<h3>3.1.2 Student Initiated - Mobile Device, Authenticated</h3>
<ol>
    <li>Student OR Instructor fills out and submits flight.</li>
    <li>View flight on mobile device.</li>
    <li>Tap link to sign flight.</li>
    <li>Select the Instructor&#8216;s name from a list of linked instructors.</li>
    <li>Flight is displayed for verification, and fields are present for CFI to provide their comments. (Since we know the remaining CFI information such as certificate and email, only comments field needs to be filled out; we can provide the rest).</li>
    <li>To verify that it is in fact the CFI who is signing, we require the CFI to enter their password as well.</li>
    <li>Signature is submitted. CFIUsername is captured, but DigitizedSignature is empty.</li>
</ol>
<h3>3.1.3 Student Initiated - Remote, Authenticated</h3>
<ol>
    <li>The student fills out their own entry for their logbook. </li>
    <li>
        From the web site, the student then requests that the instructor sign the entry
        <ol style="list-style-type: lower-alpha">
            <li>
                If the instructor is already set up as having an instructor/student relationship with the student, then the system already knows the instructor&#8216;s email address.
            </li>
            <li>
                If instructor is not already set up as an instructor for the student, then the student provides the email address of the instructor.
            </li>
        </ol>
    </li>
    <li>Email is sent to instructor with a link to the entry to be signed.</li>
    <li>
        The instructor clicks the link, bringing them to the %APP_NAME% site
        <ol style="list-style-type: lower-alpha">
            <li>
                If the instructor does not have an account, they are invited to create one.
            </li>
            <li>
                If the instructor does not have a student/instructor relationship with the student, they are invited to confirm this relationship.
            </li>
        </ol>
    </li>
    <li>Once the instructor is signed in and has a valid instructor/student relationship with the student, they can see a list of entries for which signatures are pending.</li>
    <li>Instructor clicks on a pending: goes directly to page to sign entry</li>
    <li>After signing, instructor goes to page showing any further signature requests. </li>
</ol>
<h3>3.1.4 Instructor Initiated, Remote, Authenticated</h3>
<ol>
    <li>Instructor views student logbook. This only happens if already set up as CFI already, so this avoids many of the above complications.</li>
    <li>Entries that do not have valid signatures include a link to sign</li>
    <li>Instructor clicks on entry and signs it.</li>
</ol>
<p>Note that in any of the scenarios above, the flight is committed to the database before it can be signed. The act of signing is always a distinct and separate step from the act of saving to the database, in order to ensure that the flight is not modified between being signed and being committed to the database, and to ensure that the flight that is signed is what the signer reviewed.</p>
<h2>3.2 Data Model</h2>
<h3>3.2.1 Hash of Entry</h3>
<p>
    It is important to detect if an entry has been tampered with. For this reason, we capture a hash that identifies the flight object&#8216;s state at the point of the CFI&#8216;s signing.  
    This is typically fairly small, so the hash can actually be a clear-text concatenation of the appropriate values. This is encrypted when stored to the database, and decrypted when read from
    the database, so it is not ever stored in clear-text. The fact, though, that the hash is in a regular clear-text format means that changes can not merely be detected,
    but that those changes can also be summarized for the user. And if the user performs a new edit that undoes the original edit, the &quot;tampering&quot; is undone and an invalid signature can become
    valid once more.
</p>
<p>The hash of the flight object consists of a string that is a concatenation of:</p>
<ol style="list-style-type: lower-alpha">
    <li>The ID of the flight in the database (this is unique and unchanging).</li>
    <li>The ID of the flight aircraft (id in database, not tail-number)</li>
    <li>The date of the flight (yyyy-MM-dd form)</li>
    <li>Each of the counts from the core object (landings, night landings, approaches, hold)</li>
    <li>Each of the times from the core object (Cross country, night, simulated instrument, instrument, ground-simulator, dual, CFI, SIC, PIC, and total flight time) </li>
    <li>
        Each of the properties, consisting of a concatenation of: PropertyID + value (specific value can vary based on type of property).  
        PropertyID is used because this will be invariant if name of property changes. Date must be stored in invariant format (UTC) and numbers in US Culture (period as decimal).
        Properties must be sorted by propertyID so that the signature is not invalidated by the order of the properties.
    </li>
    <li>Category/class (possibly including an override)</li>
    <li>Comments from the core object</li>
</ol>
<p>For database efficiency, we truncate the hash at 255 characters, which as a practical matter cuts off comments occasionally but rarely.</p>
<p>Excluded from the signature are values which the student should be allowed to change without invalidating the underlying signature:</p>
<ul>
    <li>Hobbs values, Engine/Flight times</li>
    <li>Telemetry</li>
    <li>Route of flight (Don&#8216;t want to invalidate for changing KJFK to JFK, for example)</li>
    <li>Pictures</li>
    <li>Sharing flags (e.g., are flight details exposed to others) </li>
</ul>
<h3>3.2.2 Record of CFI Signing</h3>
<p>When a flight is signed, the following state information is stored with the flight record: </p>
<ol style="list-style-type: lower-alpha">
    <li>Encrypted hash of the flight being signed</li>
    <li>Additional instructor comments.</li>
    <li>Date that the signature was created. THIS MAY NOT BE THE DATE OF THE FLIGHT BEING SIGNED</li>
    <li>CFI Certificate</li>
    <li>CFI Certificate Expiration Date or Recent Experience expiration Date)</li>
    <li>CFI Username (system username) - this links to the account of the CFI, if they have an account.</li>
    <li>CFI Email as of the date that the flight was signed</li>
    <li>CFI Name as of the date that the flight was signed</li>
    <li>Encrypted hash of the signer&apos;s information</li>
    <li>Digitized Signature from the CFI, if they don&#8216;t have an account (ad hoc scenario)</li>
</ol>
<p>
    The CFI&#8216;s name and email can be extrapolated from the account identified by the username. However, we will keep a cache of the email and name used at the time of signing in case
    either changes, or in case the account is subsequently deleted, since a valid signature does not stop being valid when the CFI&#8216;s account goes away.
</p>
<p>The Student&#8216;s name and email can be extrapolated from the linked flight.</p>
<p>A flight can only be signed once and by one instructor. Any new signature will overwrite the old one.</p>
<h3>3.2.3 Signature State</h3>
<p>A flight signature can be in one of 3 states:</p>
<ul>
    <li><b>None</b>: The flight is not signed. A flight must have a flight hash, a CFI certificate, a CFI Expiration date, and (a CFI username OR a digitized signature) to be considered signed; if it is missing any of these, it is considered unsigned.</li>
    <li><b>Valid</b>: The flight is signed and the stored flight hash matches the real-time computed hash of the flight.</li>
    <li><b>Invalid</b>: The flight is signed, but the stored hash does NOT match the real-time computed hash of the flight.</li>
</ul>
<p>
    Note that in computing validity, the presence of a certificate expiration or recent-experience expiration date is all that is required, the actual date of the expiration is not relevant for the validity of the signature.  
    See the discussion below of enforcement for how we ensure that only unexpired certificates are allowed for signing.
</p>
<h2>3.3 Enforcement</h2>
<p>A CFI is only allowed to sign student flights if they have provided in their profile:</p>
<ul>
    <li>A certificate number (which is currently an unverified string of text)</li>
    <li>A certificate expiration or recent experience expiration date that is in the future, for scenarios where one or the other is required.</li>
</ul>
<p>Due to potential time-zone issues between the time zone of the %APP_NAME% server (currently Pacific time zone) and where the CFI may be, we allow a 24-hour grace period before deeming an expiration date to have passed.</p>
<p>A CFI is only allowed to sign a specific flight if:</p>
<ul>
    <li>The student hands their signed-in logbook (on a mobile device) to the instructor.&nbsp; I.e., this is the Ad-hoc scenario, and would presumably require the student and instructor to be in each other&#39;s presence.</li>
    <li>OR The flight belongs to a student with whom they have an instructor/student relationship established and the student has EITHER granted permission for the instructor to view their entire logbook (likely more common for a primary student than for an experienced pilot getting a checkout or flight review) OR has specifically requested that that flight be signed.</li>
</ul>
<p>Note that the student/instructor relationship only need live for the duration of the signing process. Once an entry is signed, the relationship can be severed without affecting the validity of the existing signature.</p>
<h2>3.4 Requirements per FAA Advisory AC120-78B</h2>
<p>Advisory Circulars are explicitly not mandatory and not regulatory, but provide standards and guidance that generally provide a path (but not the only one) to compliance. (Personally, I love this - state the problem and solve it, rather than demanding specific implementations!)</p>
<p>AC-120-78B, section 2.1.2 has the following attributes for electronic signatures. They are paraphrased here, with how %APP_NAME% meets that attribute.</p>
<table border="1" style="border-collapse: collapse" cellspacing="0" cellpadding="3">
    <thead>
        <tr valign="top" style="color: #FFFFFF; font-weight: bold; background-color: #666666">
            <th>Attribute</th>
            <th>Paraphrase of Requirement</th>
            <th>How this design meets this</th>
        </tr>
    </thead>
    <tr>
        <td valign="top" style="font-weight: bold;">2.1.2.1 Uniqueness</td>
        <td valign="top">Only the person to whom the signature is attributed can be the source. I.e., can&#8216;t spoof/impersonate</td>
        <td valign="top">
            The only way to create a signature is to sign in to the CFI&#8216;s account. Since that&#8216;s already a strong form of authentication for everything else in the system, it
            should work here too. This is actually harder to spoof than a physical signature is to forge. One could theoretically create a 2<sup>nd</sup>
            account on %APP_NAME% and use that to sign with, but that&#8216;s really no different than simply signing your own logbook and using a made-up (or
            stolen) CFI # and certificate.
        </td>
    </tr>
    <tr>
        <td valign="top" style="font-weight: bold">2.1.2.2 Identifiable</td>
        <td valign="top">There must be a way to identify and authenticate the signer</td>
        <td valign="top">
            An electronic signature requires the signer to authenticate with a username/password, which provides precisely this requirement.
            A digitized handwritten signature is something only the signer can produce, and it requires the addition of their credentials (certificate, relevant expiration dates) and an email address
        </td>
    </tr>
    <tr>
        <td valign="top" style="font-weight: bold;">2.1.2.3 Control</td>
        <td valign="top">The signer must be the only person who controls the signature</td>
        <td valign="top">An electronic signature requires the signer to authenticate with a username/password.&nbsp; A digitized handwritten signature is something only the signer can produce.</td>
    </tr>
    <tr>
        <td valign="top" style="font-weight: bold;">2.1.2.4 Intent to sign</td>
        <td valign="top">The signatory should be prompted to ensure that they realize they are signing using one of several key phrases, such as &quot;Signed by&quot;.</td>
        <td valign="top">
            The user interface uses the phrase &quot;Signed by.&quot; (See AC-120-78B section 2.2.2)  There is no ambiguity here that can lead to someone unintentially following through with a signature. Additionally,
            they MUST either authenticate themselves using a password OR provide a scribble.
        </td>
    </tr>
    <tr>
        <td valign="top" style="font-weight: bold;">2.1.2.5 Deliberate</td>
        <td valign="top">It must be a proactive step to sign it; it cannot be implied, or a side-effect of another action.</td>
        <td valign="top">As above, The signature must be requested by the student, or optionally explicitly provided by the instructor.  There is no way it is a side effect of some other action, nor is there any ambiguity about what they are doing</td>
    </tr>
    <tr>
        <td valign="top" style="font-weight: bold;">2.1.2.6, 2.2.5 Non-Repudiation</td>
        <td valign="top">If your signature is shown, you can&#8216;t say &quot;it wasn&#8216;t me.&quot;</td>
        <td valign="top">
            Only the authenticated user described above can sign, and the hash comparison will only work for that CFI. Specifically, we can prove that the
            signature came from someone with access to a specific second account. The hash is also encrypted using the username of the CFI, so any attempt to change this back-trace will invalidate the signature.
            In the ad-hoc scenario, the signature provides non-repudiation at least as good as a handwritten signature (similar to what grocery store credit-card check-out tablets capture)
        </td>
    </tr>
    <tr>
        <td valign="top" style="font-weight: bold;">2.1.2.7 Permanence</td>
        <td valign="top">The electronic signature is permanent and the information to which it is attached is unalterable without a new signature.</td>
        <td valign="top">
            There is no ability provided to update a signature, and the signature itself is encrypted. As described above, if the flight hash and the current flight state do not match,
            then the flight has been altered and the signature is invalidated, requiring a new signature. For endorsements, there is no editing ability for anything - endorsements are never edited.
        </td>
    </tr>
    <tr>
        <td valign="top" style="font-weight: bold;">2.1.2.8, 2.2.7, 2.2.8 Unalterability and correctibility</td>
        <td valign="top">&quot;A document, once signed, cannot be edited&quot;, and inclusion of a means to correct records</td>
        <td valign="top">
            <div>(Yes, these seem to be contradictory requirements)</div>
            <div>For endorsements, this is true; endorsements are inherently not editable on %APP_NAME%. The only way to correct an errant endorsement is for the student to delete the endorsement and the CFI to issue a new one</div>
            <div>However, %APP_NAME% deliberately and intentionally does NOT adhere to this for signed flights; it is an overly restrictive requirement.</div>
            <div>The owner of a signed flight may modify that flight, subject to the following:</div>
            <ul>
                <li>Before any edit, they are warned and must positively affirm that editing may invalidate the signature</li>
                <li>As described above, some attributes of a flight are considered non-critical and may be modified as desired without invalidating the signature.</li>
                <li>Any change, however, to the remaining attributes of the flight will invalidate the signature</li>
            </ul>
            <div>If a signed flight is modified, the user can see precisely the changes that were made; if they choose to edit the flight back to its signed state, the signature will again be valid</div>
            <div>Flights that have an invalidated signature may be signed again.</div>
        </td>
    </tr>
    <tr>
        <td valign="top" style="font-weight: bold;">2.2.3 Notification</td>
        <td valign="top">The system should notify the signatory that the signature has been affixed.</td>
        <td valign="top">The success or failure of the signature is reported immediately.</td>
    </tr>
    <tr>
        <td valign="top" style="font-weight: bold;">2.2.4 Signature association</td>
        <td valign="top">It must be clear what the scope/significance of the signature is.</td>
        <td valign="top">
            <div>For an endorsement, the entire endorsement is always visible.</div>
            <div>For a signed flight, the scope is of that flight and the signer always is able to preview the data of the flight as part of the signing process.</div>
        </td>
    </tr>
    <tr>
        <td valign="top" style="font-weight: bold;">2.2.6 Security</td>
        <td valign="top">Any cryptographic keys must be protected, access is controlled, it should not be possible to sign after authority lapses (e.g., student/CFI relationship is broken, CFI closes account, or CFI certificate/experience lapses)</td>
        <td valign="top">
            <div>2.2.6.1 - Control of keys. %APP_NAME% is does encryption using a tightly controlled key set, with no external access. The keys for the encrypted signature are not exposed anywhere, and in fact, neither are the signature or the flight hash themselves.</div>
            <div>2.2.6.2 - Ensure only intended signer can sign. The signer must authenticate themselves to digitally sign a flight or issue an endorsement; otherwise, they can affix a digitized signature</div>
            <div>2.2.6.3 - Prevent modifications. There is no mechanism provided to edit an endorsement or to update the signature on a flight (modifications to the flight itself are described above).</div>
            <div>
                2.2.6.4 - Restrict ability to sign after lapse. If the CFI closes their account or severs their relationship with the student, they can no longer issue endorsements or sign flights, but existing
                signatures/endorsements will remain
            </div>
        </td>
    </tr>
</table>
<h3>3.4.1 Potential holes</h3>
<p>There are a few potential holes here, the risk of each of which is acceptable:</p>
<table border="1" style="border-collapse: collapse" cellspacing="0" cellpadding="3">
    <tr valign="top" style="color: #FFFFFF; font-weight: bold; background-color: #666666">
        <td valign="top">Risk</td>
        <td valign="top">Mitigation</td>
    </tr>
    <tr>
        <td valign="top">
            We are authenticating accounts, not people. If one account is used to sign on behalf of another, we can know that they are distinct accounts with distinct email addresses, but we cannot
            actually know anything about the people who created the accounts beyond that. It is possible for a student to create two accounts and use one as a &quot;CFI&quot; account.  
        </td>
        <td valign="top">
            <div>
                The issue here is not a hole in the system so much as it is fraud on the part of the user.  Also, the only way to truly get around this is to have some additional
                cryptographic means of ensuring that the two account holders are in fact who they say they are, which requires distinct authentications from a trusted 3<sup>rd</sup> party, such as validating certificates against FAA and other
                subnational/national/international databases, and that is beyond the scope of what is practical.
            </div>
        </td>
    </tr>
    <tr>
        <td valign="top">If someone has access to another person&#8216;s account (e.g., walk up to their laptop which is signed in), they can use it</td>
        <td valign="top">Again, this isn&#8216;t so much a hole in the system as it is poor security on the part of the user: if you leave your bank web page up and logged in, a passerby could embezzle money from your account. This level of risk is acceptable</td>
    </tr>
    <tr>
        <td valign="top">If the user can gain direct access to the database, one can spoof another CFI providing the signature.</td>
        <td valign="top">
            We treat database security very seriously. If it is compromised, lots of mischief can occur. However, we encrypt the flight hash so that it is (essentially) impossible to avoid detection of a
            modification of a flight, and we create an encryption of the signature details (CFI username, expiration date, certificate, etc.) so that we can detect modification of those as well.
            The encryption happens outside of the database, so even if someone were to gain access to the database, they could not produce a properly encrypted signature.
        </td>
    </tr>
</table>
<h3>3.4.2 Verification of identity</h3>
<p>AC120-78B defines Digital Signatures as employing cryptographically generated data, and it references PKI (Public Key Infrastructure) as a technology</p>
<p>The purpose of a cryptographic signature is really twofold: (a) it authenticates the fact that the signer actually signed it, and (b) it proves that the signature or the thing being signed has not been modified.</p>
<p>As noted earlier, PKI inherently requires at 2 or more parties to hold keys; it has no value over other cryptographic methods if the holder of the private key also has exclusive access to the public key.</p>
<p>
    The primary application of PKI in %APP_NAME% would be to prove that the signer is who they say they are. This would require not only that they have the private key of a
    private/public key pair, but wouild additionally require that an out-of-band certifying authority validate the identity (e.g., a passport agency, the FAA, EASA, etc.) and then issue
    secure credentials that they vouch for.
</p>
<p>All of this is out of scope for the %APP_NAME% system - PKI for this purpose may be cryptographically secure, but it is well beyond what is practical to achieve, and thus simpler cryptography is employed instead.</p>
<p>While we cannot validate that an account holder is who they say we are , we can verify a few things:</p>
<ol style="list-style-type: lower-alpha">
    <li>The actions taken on behalf of the account holder were authorized by that account holder (by virtue of the fact that only that account can sign things), when not doing an ad-hoc signature</li>
    <li>The CFI# and Expiration form a (weak) sort of username/password.</li>
    <li>We can ensure with a reasonable degree of confidence that the account holder is in fact the owner of the email address by sending email that requires a response to that account. Since email is not secure, this is not perfect, but it works pretty well.</li>
    <li>We can also store a digitization of a handwritten signature. This is not %APP_NAME% vouching for the identity of the signer, but it enables others to evaluate it and judge for themselves (see below). Ironically, this does not seem to meet the requirements of AC120-78 (due to the lack of non-repudiation and cryptography), yet it provides no less authentication than a paper logbook and appears to be explicitly authorized by AC-120-78B.</li>
</ol>
<h3>3.4.3 Verification of integrity.</h3>
<p>%APP_NAME% performs two integrity checks to detect tampering with or forging of the signature:</p>
<ol style="list-style-type: lower-alpha">
    <li>The hash of the salient flight details (as described above) is stored in an encrypted form, and validity checks are made by comparing an encrypted hash to this stored encrypted hash. &nbsp; This makes tampering with the flight hash hard to do and easy to detect. &nbsp; We also never need to bother decrypting it, since we can compare a newly computed/encrypted hash with the encrypted hash stored in the database.</li>
    <li>A hash is also provided of the salient signature details (CFI username, CFI Certificate, CFI certificate/recent experience Expiration date, and date of signature) so that we can detect modifications there; this provides the integrity that the system itself did in fact sign the user&#8216;s entry.&nbsp; Like the hash of the flight details, this is also stored in encrypted form, and like its flight counterpart, we never need to decrypt it.</li>
</ol>
<p>So, if a malicious user were to gain access to the database, they could not forge a signature because they could not store a propertly compute and encrypted hash that would match subsequent comparisons.&nbsp; Nor could they modify an existing signature for the same reason.</p>
<h2>3.5 Handwritten signatures</h2>
<p>With the proliferation of touch-sensitive smartphones and tablets (particularly among pilots), and the fact that the student and pilot are together at the end of a lesson, the convenience of capturing a digitized signature right then in there is certainly much greater than forcing the CFI to both create a %APP_NAME% account and to set up a relationship with the student. This is why we have the &quot;Ad-hoc&quot; scenario described above.</p>
<p>AC120-78B does allow for digitized handwritten signatures, and %APP_NAME% supports this functionality.</p>
<p>To do that, however, requires addressing the non-repudiation and traceability issues above. An image of a signature is easily reproduced, and also easily forged. Stated another way, the FAA circular requires some way to authenticate that the signer is the signer. (Ironically, this is a tougher requirement than required for paper signatures.)</p>
<p>
    The authenticated methods above provide this: the signing MUST come from a SPECIFIC, SEPARATE, AUTHENTICATED account. Capturing a digitized handwritten signature provides no way to determine that it
    wasn&#8216;t from the student himself. However, since it is done via the student&#8216;s account and in their presence (since it is via their device and signed in to their account), it CAN prove that the student accepted the signature. For this reason, we require the student to positively affirm that it is the instructor who is signing.  
    (Sort of the student-signing-the-instructor-signing-the-student.)
</p>
<p>Nevertheless, a digitized signature is a less traceable mechanism and is easier to repudiate than the non-signature model, but it does provide a lightweight alternative.</p>
<p>
    Alas, old habits die hard. While the authenticated methods are vastly superior and do not require a handwritten signature, %APP_NAME% does provide the signer the ability if they choose to create a default scribble (much like a rubber stamp with ink pad) that will show next
    to authenticated signatures.  It is important to stress that this is <b>eye candy with no functional value</b>, but it does satisfy some sort of primal need to see a handwritten scribble.  When a signature is displayed for such decorative purposes, it includes
    an icon of a rubber stamp <img src="/logbook/images/rubberstamp.png" style="vertical-align: middle;" /> to indicate that no unique scribble was provided for that specific electronic signature.
</p>
<h2>3.6 Additional issues/scenarios</h2>
<h3>Instructor is not on %APP_NAME% at all</h3>
<p>The ad-hoc scenario is designed for this.&nbsp; It does require the use of the mobile app (for touch-screen access) and physical presence.</p>
<h3>Instructor is on %APP_NAME% but not set up as student&#8216;s CFI</h3>
<p>A simple email exchange can establish the relationship.&nbsp; Either party may initiate, using the website.&nbsp; An email is sent to the non-initiating party, which includes a link; following the link goes back to the website, where the account is authenticated (and created, if needed) and the relationship can be accepted.</p>
<h3>Instructor doesn&#8216;t have CFI certificate # or expiration, or has expired</h3>
<p>This instructor cannot sign.&nbsp; By design. UPDATE Dec 2024: The FAA has removed the expiration for an instructor certificate; instead, there is now a &quot;Recent Experience&quot; expiration. A CFI must have done one of a number of activities (see <a target="_blank" href="https://www.faa.gov/documentlibrary/media/advisory_circular/ac_61-65J.pdf">AC 61-65J</a>) to maintain their certificate.</p>
<p>Also note that there are other scenarios where no expiration is required (ground instructors, ATPs, etc.); %APP_NAME% relaxes the requirement in these scenarios</p>
<h3>Administrative actions</h3>
<p>
    There are a few adminstrative actions outside of the control of the pilot or the signer of a flight that can invalidate the signature on a properly signed flight.  The primary one is where database maintenance may migrate an aircraft from one
    ID to another. An example of where this occurs is when two identical aircraft in the database are merged into a single aircraft. This invalidates the hash for the flight, even though the details of the aircraft have not changed.
    One advantage of having a reversable hash is that it means that the system can (and does!) implement a system to detect such issues and re-validate the signature when this (rarely) arises.
</p>
<h1>4 Instructor endorsements for students</h1>
<h2>4.1 Overview</h2>
<p>An endorsement is a certification by the instructor that the student is competent and (as appropriate) authorized for certain flights. Typical examples of endorsements include solo operations, tailwheel sign-off, readiness for a check-ride, etc.</p>
<p>Endorsements are not tied to an individual flight (which is why they are in the back of the book for paper logbooks), and as such are much simpler than signed flights discussed above. (For this reason, %APP_NAME% implemented them much earlier than signed flights).</p>
<h2>4.2 User Flow</h2>
<p>Endorsements largely follow the same model as for signing flights (above), but with a few small differences:</p>
<ol>
    <li><b>Student Initiated - Mobile Device, Ad-Hoc:</b> In this scenario, the student has an account on %APP_NAME% and the instructor may or may not have one, but we bypass the establishment of an account/relationship in order to quickly issue an endorsement on-the-spot. This is called &quot;Ad-hoc&quot; because no relationship is established. Because we cannot authenticate the CFI in any other way, but the student has a mobile device, a digitized handwritten signature is captured. This is the only scenario we allow where a digitized handwritten signature is used, because it is the only one where we can assume that the CFI has physical access to the mobile device that is signed in to the student&#8216;s account.</li>
    <li><b>Student Initiated - Mobile Device, Authenticated</b>: In this scenario, the CFI has both a %APP_NAME% account AND the student and CFI have established a student/CFI relationship. This might be a typical scenario for primary flight training. Because the instructor is known to %APP_NAME%, a digitized handwritten signature is not necessary. However, the CFI must still authenticate themselves to the device by providing their password.</li>
    <li><b>CFI Initiated - Remote, Authenticated.</b>The CFI and Student are both on %APP_NAME% and have a relationship. The CFI may choose, from within their own account, to issue an endorsement directly to a student.</li>
    <li><strong>CFI Initiated - Offline Student.</strong>&nbsp; This is more of a record keeping task than it is an official endorsement.&nbsp; The CFI creates a record of an endorsement given to a student that is not on %APP_NAME%.&nbsp; This is entirely for recordkeeping within the CFI&#39;s account; the student receives nothing from this process.&nbsp; As such, this is not an &quot;official&quot; endorsement.</li>
</ol>
<p>Endorsements cannot be deleted by the issuer (though the student can, at their own peril, delete them), nor can they be edited. And since they are not validating an underlying object, the endorsement cannot become invalid (the way that a signature on a flight can become invalid), so there there is no need to even encrypt them or compute a hash.  They are simply permanent records.</p>
<p>The fact of the issuance of the endorsement (in an authenticated scenario) or the presence of the scribble (in the ad-hoc scenario) proves that the specified signer issued the endorsement, in its current form, subject to the same limitations described above for signed flights.</p>
<p>In 2018, a few validations were relaxed:</p>
<ul>
    <li>Backdating of endorsements is now allowed, under the premise that transparency makes such practice clear.&nbsp; The date of issue is captured, which can be backdated, as is the date of creation, which cannot.&nbsp; When these two dates differ, both are clearly displayed, so that there is no ambiguity about what happened.&nbsp; E.g., if an endorsement is issued on August 8 2015 with a date of August 8 2015, then simply &quot;August 8&quot; is shown.&nbsp; But if an endorsement is issued on May 5 2017 with a date of Aug 8 2015, then both the date of the endorsement (August 5 2015) and the date of creation (May 5 2017) are displayed</li>
    <li>Since Ground Instructor certificates do not expire and Ground Instructors can issue some endorsements, an expiration date is no longer strictly required.&nbsp; If present, though, it must be later than the date of the endorsement.&nbsp; E.g., for an endorsement with an effective date of August 5 2015, the certificate expiration must either not be present, or must be on or after August 5 2015. </li>
</ul>
<h2>4.3 Data Model</h2>
<p>Each endorsement consists of the following:</p>
<ul>
    <li>A template (form), which must have data entered for each of its fields</li>
    <li>The name of the student</li>
    <li>The name of the instructor</li>
    <li>Either the username (in the database) of the instructor, if it is digitally issued, or a digitized scribble-signature.</li>
    <li>The Instructor&#8216;s CFI (or other appropriate certificate) number (cannot be empty)</li>
    <li>The instructor&#8216;s CFI Expiration or Recent Experience expiration date (must be after the date of the endorsement, if present; some certificates such as ground instructor, allow for issuance of endorsements, but do not expire)</li>
    <li>The date that the endorsement is given</li>
    <li>The date that the endorsement is created</li>
    <li>(Optional) the relevant FAR for the endorsement.</li>
</ul>
<h2>4.4 Other considerations</h2>
<p>All of the other discussion above concerning signatures applies here as well.</p>
<p>To be clear, an endorsement on %APP_NAME% technically does not mean &quot;CFI A endorsed student B&quot;, but rather &quot;The person who has authenticated access to account A and the person who has authenticated access to account B have identified A as having authority to endorse B and has done so.&quot;</p>
<h1>5 Revision History</h1>
<ul>
    <li>2012-12: Initial draft</li>
    <li>2014-01: Reformatting, fix a few typos, added some definitions</li>
    <li>2014-03: Added a bit more clarity around encryption of hashes/tamper detection.</li>
    <li>2016-10: Updated to reference AC120-78A (previously had been AC120-78).</li>
    <li>2018-08: Updated to reference endorsement updates</li>
    <li>2024-11: Updated to reference recent-experience expiration</li>
    <li>2024-12: Updated for AC 120-78B, clarified language</li>
</ul>